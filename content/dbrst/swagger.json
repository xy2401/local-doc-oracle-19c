{
    "info":{
        "description":"Provide consumers the ability to perform operations with different Oracle Database features through a web REST API that can be easily adopted.",
        "version":"2019.04.11",
        "title":"REST APIs for Oracle Database",
        "contact":{
            "name":"Oracle REST Data Services",
            "url":"https://www.oracle.com/database/technologies/appdev/rest.html"
        },
        "x-summary":"Provide consumers the ability to perform operations with different Oracle Database features through a web REST API that can be easily adopted."
    },
    "externalDocs":{
        "description":"Oracle REST Data Services product documentation.",
        "url":"https://docs.oracle.com/en/database/oracle/oracle-rest-data-services/"
    },
    "paths":{
        "/database/components/":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get all database components",
                "description":"Returns information about the components loaded into the database from DBA_REGISTRY view.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"All database components loaded into the database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-components--get",
                "x-filename-id":"database-components-get"
            }
        },
        "/database/components/{comp_id}":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get a database component",
                "description":"Returns information about the specified component loaded into the database from DBA_REGISTRY view.",
                "parameters":[
                    {
                        "name":"comp_id",
                        "in":"path",
                        "description":"Identifier of the component.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information about the specified component.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-components-{comp_id}-get",
                "x-filename-id":"database-components-comp_id-get"
            }
        },
        "/database/connections/":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get a description of all local listeners for this database",
                "description":"Returns LOCAL LISTENER and SERVICE NAME records from GV$LISTENER_NETWORK for this database.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"All the local listeners for this database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-connections--get",
                "x-filename-id":"database-connections-get"
            }
        },
        "/database/connections/{host_name},{port},{service_name}":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get a description of a specifc local listeners for this database",
                "description":"Returns LOCAL LISTENER and SERVICE NAME information from GV$LISTENER_NETWORK for a specific host, port, and service combination.",
                "parameters":[
                    {
                        "name":"host_name",
                        "in":"path",
                        "description":"Name of the host.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"port",
                        "in":"path",
                        "description":"Port number being listened on.",
                        "required":true,
                        "type":"number"
                    },
                    {
                        "name":"service_name",
                        "in":"path",
                        "description":"Name of the service.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on a specific listener and service.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-connections-{host_name},{port},{service_name}-get",
                "x-filename-id":"database-connections-host_name-port-service_name-get"
            }
        },
        "/database/datapump/export":{
            "post":{
                "tags":[
                    "General"
                ],
                "summary":"Create an export data pump job",
                "description":"Create a Data Pump export job with the specified parameters and start it. Refer to Oracle Data Pump documentation for a more detailed explanation of parameters. Export operation only permitted in this implementation version.",
                "responses":{
                    "201":{
                        "description":"Description of the Data Pump export job that has been created.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "parameters":[
                    {
                        "required":true,
                        "name":"body",
                        "in":"body",
                        "schema":{
                            "type":"object",
                            "properties":{
                                "datapump_dir":{
                                    "type":"string",
                                    "description":"Specify the database directory to use.",
                                    "default":"DATA_PUMP_DIR"
                                },
                                "filter":{
                                    "type":"string",
                                    "description":"The filter to apply to identify database objects for export. Required when job_mode is not FULL."
                                },
                                "job_mode":{
                                    "type":"string",
                                    "description":"Specify the Data Pump job mode.",
                                    "default":"SCHEMA",
                                    "enum":[
                                        "FULL",
                                        "SCHEMA",
                                        "TABLE",
                                        "TABLESPACE"
                                    ]
                                },
                                "threads":{
                                    "type":"integer",
                                    "description":"The maximum number of worker processes that can be used for the job. Set this parameter to adjust the amount of resources used for a job."
                                }
                            }
                        }
                    }
                ],
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-datapump-export-post",
                "x-filename-id":"database-datapump-export-post"
            }
        },
        "/database/datapump/jobs/":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get all data pump jobs",
                "description":"Describes all Data Pump jobs in the database. Uses DBA_DATAPUMP_JOBS view.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"All Data Pump jobs in the database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-datapump-jobs--get",
                "x-filename-id":"database-datapump-jobs-get"
            },
            "post":{
                "tags":[
                    "General"
                ],
                "summary":"Create a data pump job",
                "description":"Create a Data Pump job with the specified parameters and start it. Refer to Oracle Data Pump documentation for a more detailed explanation of parameters. Export operation only permitted in this implementation version.",
                "responses":{
                    "201":{
                        "description":"Details of the Data Pump job that has been successfully created.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "parameters":[
                    {
                        "required":true,
                        "name":"body",
                        "in":"body",
                        "schema":{
                            "type":"object",
                            "required":[
                                "operation"
                            ],
                            "properties":{
                                "operation":{
                                    "type":"string",
                                    "description":"Specify the Data Pump job operation.",
                                    "enum":[
                                        "EXPORT"
                                    ]
                                },
                                "datapump_dir":{
                                    "type":"string",
                                    "description":"Specify the database directory to use.",
                                    "default":"DATA_PUMP_DIR"
                                },
                                "filter":{
                                    "type":"string",
                                    "description":"The filter to apply to identify database objects for export. Required when job_mode is not FULL."
                                },
                                "job_mode":{
                                    "type":"string",
                                    "description":"Specify the Data Pump job mode.",
                                    "default":"SCHEMA",
                                    "enum":[
                                        "FULL",
                                        "SCHEMA",
                                        "TABLE",
                                        "TABLESPACE"
                                    ]
                                },
                                "threads":{
                                    "type":"integer",
                                    "description":"The maximum number of worker processes that can be used for the job. Set this parameter to adjust the amount of resources used for a job."
                                }
                            }
                        }
                    }
                ],
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-datapump-jobs--post",
                "x-filename-id":"database-datapump-jobs-post"
            }
        },
        "/database/datapump/jobs/{owner_name},{job_name}/":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get a specific data pump job",
                "description":"Describes a specific Data Pump job in the database. Uses DBA_DATAPUMP_JOBS view. When the specified job is a Data Pump Export job, the response contains links to the log and export files.",
                "parameters":[
                    {
                        "name":"owner_name",
                        "in":"path",
                        "description":"Owner of the Data Pump job.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"job_name",
                        "in":"path",
                        "description":"Name of the Data Pump job.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Details of the Data Pump job. For an EXPORT job, this will also include links to log and export files.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-datapump-jobs-{owner_name},{job_name}--get",
                "x-filename-id":"database-datapump-jobs-owner_name-job_name-get"
            }
        },
        "/database/datapump/jobs/{owner_name},{job_name}/{filename}":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get a file for a specific data pump job",
                "description":"Returns the log or export file for the given data pump job.",
                "parameters":[
                    {
                        "name":"owner_name",
                        "in":"path",
                        "description":"Owner of the Data Pump job.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"job_name",
                        "in":"path",
                        "description":"Name of the Data Pump job.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"filename",
                        "in":"path",
                        "description":"Name of the file associated with the Data Pump job.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The requested file for the Data Pump job. Log files are text/plain. Export file are application/vnd.tcpdump.pcap.",
                        "schema":{
                            "type":"string"
                        }
                    }
                },
                "produces":[
                    "text/plain"
                ],
                "x-internal-id":"database-datapump-jobs-{owner_name},{job_name}-{filename}-get",
                "x-filename-id":"database-datapump-jobs-owner_name-job_name-filename-get"
            }
        },
        "/database/db_links/":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get all database links",
                "description":"Describes all database links in the database. Uses DBA_DB_LINKS view.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"All database links in the database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-db_links--get",
                "x-filename-id":"database-db_links-get"
            }
        },
        "/database/db_links/{owner},{db_link}":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get a database link",
                "description":"Describes a database link in the database. Uses DBA_DB_LINKS view.",
                "parameters":[
                    {
                        "name":"owner",
                        "in":"path",
                        "description":"Owner for the database link.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"db_link",
                        "in":"path",
                        "description":"Name of the database link.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on the specific database link.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-db_links-{owner},{db_link}-get",
                "x-filename-id":"database-db_links-owner-db_link-get"
            }
        },
        "/database/feature_usage/":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get all feature usage statistics",
                "description":"See what features are used in the database. Returns records from DBA_FEATURE_USAGE_STATISTICS.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Feature Usage records from DBA_FEATURE_USAGE_STATISTICS.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-feature_usage--get",
                "x-filename-id":"database-feature_usage-get"
            }
        },
        "/database/feature_usage/{dbid},{name}":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get usage statistic for a feature",
                "description":"Returns records from DBA_FEATURE_USAGE_STATISTICS for a specific feature.",
                "parameters":[
                    {
                        "name":"dbid",
                        "in":"path",
                        "description":"Database identifier as found in GV$DATABASE.",
                        "required":true,
                        "type":"number"
                    },
                    {
                        "name":"name",
                        "in":"path",
                        "description":"Name of the feature.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on the usage statistics for a specific feature.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-feature_usage-{dbid},{name}-get",
                "x-filename-id":"database-feature_usage-dbid-name-get"
            }
        },
        "/database/monitoring/alerts/":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get all alerts",
                "description":"Returns records from V$DIAG_ALERT_EXT. In an Oracle RAC environment, data returned by this service may vary according to the instance to which a session is connected.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Returns database alerts.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-alerts--get",
                "x-filename-id":"database-monitoring-alerts-get"
            }
        },
        "/database/monitoring/alerts/{record_id}":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get an alert record",
                "description":"Returns specific alert record from V$DIAG_ALERT_EXT. In an Oracle RAC environment, data returned by this service may vary according to the instance to which a session is connected.",
                "parameters":[
                    {
                        "name":"record_id",
                        "in":"path",
                        "description":"Identifier for the alert record.",
                        "required":true,
                        "type":"number"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on a specific alert.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-alerts-{record_id}-get",
                "x-filename-id":"database-monitoring-alerts-record_id-get"
            }
        },
        "/database/monitoring/alerts_recent_summaries/by_message_level":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get count of recent alerts by message level",
                "description":"Group by message level on V$DIAG_ALERT_EXT originating within the last 7 days. In an Oracle RAC environment, data returned by this service may vary according to the instance to which a session is connected.",
                "responses":{
                    "200":{
                        "description":"Summary of alerts from the last 7 days, aggregated by message level.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "parameters":[
                ],
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-alerts_recent_summaries-by_message_level-get",
                "x-filename-id":"database-monitoring-alerts_recent_summaries-by_message_level-get"
            }
        },
        "/database/monitoring/alerts_recent_summaries/by_message_type":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get count of recent alerts by message type",
                "description":"Group by message type on V$DIAG_ALERT_EXT originating within the last 7 days. In an Oracle RAC environment, data returned by this service may vary according to the instance to which a session is connected.",
                "responses":{
                    "200":{
                        "description":"Summary of alerts from the last 7 days, aggregated by message type.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "parameters":[
                ],
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-alerts_recent_summaries-by_message_type-get",
                "x-filename-id":"database-monitoring-alerts_recent_summaries-by_message_type-get"
            }
        },
        "/database/monitoring/alerts_summaries/by_message_level":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get count of alerts by message level",
                "description":"Group by message level on V$DIAG_ALERT_EXT. In an Oracle RAC environment, data returned by this service may vary according to the instance to which a session is connected.",
                "responses":{
                    "200":{
                        "description":"Summary of alerts, brokedown by message level.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "parameters":[
                ],
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-alerts_summaries-by_message_level-get",
                "x-filename-id":"database-monitoring-alerts_summaries-by_message_level-get"
            }
        },
        "/database/monitoring/alerts_summaries/by_message_type":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get count of alerts by message type",
                "description":"Group by message type on V$DIAG_ALERT_EXT. In an Oracle RAC environment, data returned by this service may vary according to the instance to which a session is connected.",
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"Summary of alerts brokedown by message type.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-alerts_summaries-by_message_type-get",
                "x-filename-id":"database-monitoring-alerts_summaries-by_message_type-get"
            }
        },
        "/database/monitoring/session_limits":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get all session limits",
                "description":"Get all resource limits for sessions using GV$RESOURCE_LIMIT view.",
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"All session limits in the database.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-session_limits-get",
                "x-filename-id":"database-monitoring-session_limits-get"
            }
        },
        "/database/monitoring/session_locks/":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get all locks held in the database",
                "description":"Get all locks that are held in the database using DBA_LOCK view.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"All locks held in the database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-session_locks--get",
                "x-filename-id":"database-monitoring-session_locks-get"
            }
        },
        "/database/monitoring/session_locks/{session_id},{lock_id1},{lock_id2}":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get a specific session lock record",
                "description":"Returns corresponding record from DBA_LOCK view.",
                "parameters":[
                    {
                        "name":"session_id",
                        "in":"path",
                        "description":"Session holding or acquiring the lock.",
                        "required":true,
                        "type":"number"
                    },
                    {
                        "name":"lock_id1",
                        "in":"path",
                        "description":"Type-specific lock identifier, part 1.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"lock_id2",
                        "in":"path",
                        "description":"Type-specific lock identifier, part 2.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on a specific lock.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-session_locks-{session_id},{lock_id1},{lock_id2}-get",
                "x-filename-id":"database-monitoring-session_locks-session_id-lock_id1-lock_id2-get"
            }
        },
        "/database/monitoring/session_locks/holding/":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get all locks that are blocking other sessions",
                "description":"Using DBA_LOCKS and DBA_BLOCKERS views, this service returns a list of DBA_LOCKS records where the session is not waiting for a locked object but is holding a lock on an object for which another session is waiting. In an Oracle RAC environment, this only applies if the blocker is on the same instance.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"All locks that are blocking other sessions.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-session_locks-holding--get",
                "x-filename-id":"database-monitoring-session_locks-holding-get"
            }
        },
        "/database/monitoring/session_locks/holding/{session_id},{lock_id1},{lock_id2}":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get a session locks that is blocking other sessions",
                "description":"Using DBA_LOCKS and DBA_BLOCKERS views, this service returns a speciic DBA_LOCKS record where the session is not waiting for a locked object but is holding a lock on an object for which another session is waiting. In an Oracle RAC environment, this only applies if the blocker is on the same instance.",
                "parameters":[
                    {
                        "name":"session_id",
                        "in":"path",
                        "description":"Session identifier.",
                        "required":true,
                        "type":"number"
                    },
                    {
                        "name":"lock_id1",
                        "in":"path",
                        "description":"Type-specific lock identifier, part 1.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"lock_id2",
                        "in":"path",
                        "description":"Type-specific lock identifier, part 2.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on a specific session lock.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-session_locks-holding-{session_id},{lock_id1},{lock_id2}-get",
                "x-filename-id":"database-monitoring-session_locks-holding-session_id-lock_id1-lock_id2-get"
            }
        },
        "/database/monitoring/session_locks/waiting/":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get all locks that sessions are waiting on",
                "description":"Using DBA_LOCKS and DBA_WAITERS views, this service returns a list of DBA_LOCKS records for sessions that are waiting on locks held by other sessions. In an Oracle RAC environment, this only applies if the waiter is on the same instance.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"All locks in the database that sessions are waiting on.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-session_locks-waiting--get",
                "x-filename-id":"database-monitoring-session_locks-waiting-get"
            }
        },
        "/database/monitoring/session_locks/waiting/{session_id},{lock_id1},{lock_id2}":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get a specific lock that a session is waiting on",
                "description":"Using DBA_LOCKS and DBA_WAITERS views, this service returns the corresponding DBA_LOCKS records for session that is waiting on locks held by other sessions. In an Oracle RAC environment, this only applies if the waiter is on the same instance.",
                "parameters":[
                    {
                        "name":"session_id",
                        "in":"path",
                        "description":"Session identifier.",
                        "required":true,
                        "type":"number"
                    },
                    {
                        "name":"lock_id1",
                        "in":"path",
                        "description":"Type-specific lock identifier, part 1.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"lock_id2",
                        "in":"path",
                        "description":"Type-specific lock identifier, part 2.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on a specific lock that a session is waiting on.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-session_locks-waiting-{session_id},{lock_id1},{lock_id2}-get",
                "x-filename-id":"database-monitoring-session_locks-waiting-session_id-lock_id1-lock_id2-get"
            }
        },
        "/database/monitoring/session_summaries/by_type":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get count of different session types",
                "description":"Group by Session Type on GV$SESSION.",
                "responses":{
                    "200":{
                        "description":"Summary of different session types in the database.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "parameters":[
                ],
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-session_summaries-by_type-get",
                "x-filename-id":"database-monitoring-session_summaries-by_type-get"
            }
        },
        "/database/monitoring/session_wait_classes/":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get all session wait class records",
                "description":"Returns all records from GV$SESSION_WAIT_CLASS.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Summary of session wait classes in the database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-session_wait_classes--get",
                "x-filename-id":"database-monitoring-session_wait_classes-get"
            }
        },
        "/database/monitoring/session_wait_classes/{sid},{serial_number},{wait_class_number}":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get a specific session wait class record",
                "description":"Returns corresponding record from GV$SESSION_WAIT_CLASS.",
                "parameters":[
                    {
                        "name":"sid",
                        "in":"path",
                        "description":"Session identifier.",
                        "required":true,
                        "type":"number"
                    },
                    {
                        "name":"serial_number",
                        "in":"path",
                        "description":"Session serial number.",
                        "required":true,
                        "type":"number"
                    },
                    {
                        "name":"wait_class_number",
                        "in":"path",
                        "description":"Number of the wait class.",
                        "required":true,
                        "type":"number"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on the specified session wait class.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-session_wait_classes-{sid},{serial_number},{wait_class_number}-get",
                "x-filename-id":"database-monitoring-session_wait_classes-sid-serial_number-wait_class_number-get"
            }
        },
        "/database/monitoring/session_waits/":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get all session waits",
                "description":"Returns all records from GV$SESSION_WAIT.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"All session wait records from GV$SESSION_WAIT.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-session_waits--get",
                "x-filename-id":"database-monitoring-session_waits-get"
            }
        },
        "/database/monitoring/session_waits/{sid},{seq_number}":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get a specific session wait",
                "description":"Returns corresponding record from GV$SESSION_WAIT.",
                "parameters":[
                    {
                        "name":"sid",
                        "in":"path",
                        "description":"Session identifier.",
                        "required":true,
                        "type":"number"
                    },
                    {
                        "name":"seq_number",
                        "in":"path",
                        "description":"Wait sequence number.",
                        "required":true,
                        "type":"number"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on the specified session wait.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-session_waits-{sid},{seq_number}-get",
                "x-filename-id":"database-monitoring-session_waits-sid-seq_number-get"
            }
        },
        "/database/monitoring/sessions/":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get all current sessions",
                "description":"Returns all records on GV$SESSION.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"All current sessions in the database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-sessions--get",
                "x-filename-id":"database-monitoring-sessions-get"
            }
        },
        "/database/monitoring/sessions/{sid},{serial_number}/":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get a session",
                "description":"Returns the GV$SESSION for the specified Session Identifier and Session Serial Number.",
                "parameters":[
                    {
                        "name":"sid",
                        "in":"path",
                        "description":"Session identifier.",
                        "required":true,
                        "type":"number"
                    },
                    {
                        "name":"serial_number",
                        "in":"path",
                        "description":"Session serial number.",
                        "required":true,
                        "type":"number"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on the specified session.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-sessions-{sid},{serial_number}--get",
                "x-filename-id":"database-monitoring-sessions-sid-serial_number-get"
            }
        },
        "/database/monitoring/sessions/{sid},{serial_number}/long_running_operations":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get all long running operations for a Session",
                "description":"Returns all records from GV$SESSION_LONGOPS for a specific session.",
                "parameters":[
                    {
                        "name":"sid",
                        "in":"path",
                        "description":"Session identifier.",
                        "required":true,
                        "type":"number"
                    },
                    {
                        "name":"serial_number",
                        "in":"path",
                        "description":"Session serial number.",
                        "required":true,
                        "type":"number"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on long running operations for the session.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-sessions-{sid},{serial_number}-long_running_operations-get",
                "x-filename-id":"database-monitoring-sessions-sid-serial_number-long_running_operations-get"
            }
        },
        "/database/monitoring/sessions/{sid},{serial_number}/process":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get current active process for a session",
                "description":"Returns all records from GV$PROCESS for a specific session.",
                "parameters":[
                    {
                        "name":"sid",
                        "in":"path",
                        "description":"Session identifier.",
                        "required":true,
                        "type":"number"
                    },
                    {
                        "name":"serial_number",
                        "in":"path",
                        "description":"Session serial number.",
                        "required":true,
                        "type":"number"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Description of actives processes for a session.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-sessions-{sid},{serial_number}-process-get",
                "x-filename-id":"database-monitoring-sessions-sid-serial_number-process-get"
            }
        },
        "/database/monitoring/wait_class_totals":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get time totals for all registered wait classes",
                "description":"Returns all the records from GV$SYSTEM_WAIT_CLASS, except 'Idle' wait class.",
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"Summary information on the wait class time totals.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-wait_class_totals-get",
                "x-filename-id":"database-monitoring-wait_class_totals-get"
            }
        },
        "/database/monitoring/waits_recent":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get wait time summary from recent active session history records",
                "description":"Oracle Diagnostics Pack licence is required for this service. Group by sample_time and wait_class on GV$ACTIVE_SESSION_HISTORY for records with sample_time within the last 7 days. Note that time waited is in microseconds.",
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"Wait time summary from active session history records within the last 7 days.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-waits_recent-get",
                "x-filename-id":"database-monitoring-waits_recent-get"
            }
        },
        "/database/monitoring/wait_class_metrics":{
            "get":{
                "tags":[
                    "Monitoring"
                ],
                "summary":"Get all wait class metrics",
                "description":"Returns all records from GV$WAITCLASSMETRIC for all GV$SYSTEM_WAIT_CLASS records except 'Idle' wait class.",
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"Wait class metrics records.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-monitoring-wait_class_metrics-get",
                "x-filename-id":"database-monitoring-wait_class_metrics-get"
            }
        },
        "/database/objects/":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get all database objects",
                "description":"Returns all records from DBA_OBJECTS.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"All database objects in the database. Returns all records from DBA_OBJECTS.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects--get",
                "x-filename-id":"database-objects-get"
            }
        },
        "/database/objects/{owner},{object_name}":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get a specific object",
                "description":"Returns corresponding record from DBA_OBJECTS view.",
                "parameters":[
                    {
                        "name":"owner",
                        "in":"path",
                        "description":"Owner for the index.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"object_name",
                        "in":"path",
                        "description":"Name of the object.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on a specific object.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-{owner},{object_name}-get",
                "x-filename-id":"database-objects-owner-object_name-get"
            }
        },
        "/database/objects/arguments/":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get all arguments for functions and procedures",
                "description":"Returns all records from DBA_ARGUMENTS.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"All records from DBA_ARGUMENTS.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-arguments--get",
                "x-filename-id":"database-objects-arguments-get"
            }
        },
        "/database/objects/arguments/{object_id},{subprogram_id},{argument_name}":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get an argument",
                "description":"Returns the specified argument information from DBA_ARGUMENTS.",
                "parameters":[
                    {
                        "name":"object_id",
                        "in":"path",
                        "description":"Identifier of the object the argument belongs to.",
                        "required":true,
                        "type":"number"
                    },
                    {
                        "name":"subprogram_id",
                        "in":"path",
                        "description":"Identifier of the subprogram the argument belongs to.",
                        "required":true,
                        "type":"number"
                    },
                    {
                        "name":"argument_name",
                        "in":"path",
                        "description":"Name of the argument.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information for the specified argument.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-arguments-{object_id},{subprogram_id},{argument_name}-get",
                "x-filename-id":"database-objects-arguments-object_id-subprogram_id-argument_name-get"
            }
        },
        "/database/objects/columns/":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get all table columns",
                "description":"Returns all records from DBA_TAB_COLUMNS which describes the columns of all tables, views, and clusters in the database.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"All columns in the database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-columns--get",
                "x-filename-id":"database-objects-columns-get"
            }
        },
        "/database/objects/columns/{owner},{table_name},{column_name}":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get a specific column",
                "description":"Returns corresponding record from DBA_TAB_COLUMNS view.",
                "parameters":[
                    {
                        "name":"owner",
                        "in":"path",
                        "description":"Owner for the index.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"table_name",
                        "in":"path",
                        "description":"Name of the table the column belongs to.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"column_name",
                        "in":"path",
                        "description":"Name of the column.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on a specific column.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-columns-{owner},{table_name},{column_name}-get",
                "x-filename-id":"database-objects-columns-owner-table_name-column_name-get"
            }
        },
        "/database/objects/foreign_keys/":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get all foreign keys",
                "description":"Returns records from DBA_CONSTRAINTS and DBA_CONS_COLUMNS where the constraint type is 'R'.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Describes all constraint definitions, with constraint type 'R', on all tables in the database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-foreign_keys--get",
                "x-filename-id":"database-objects-foreign_keys-get"
            }
        },
        "/database/objects/foreign_keys/{owner},{constraint_name}":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get a specific foreign keys",
                "description":"Returns corresponding record from DBA_CONSTRAINTS and DBA_CONS_COLUMNS where the constraint type is 'R'.",
                "parameters":[
                    {
                        "name":"owner",
                        "in":"path",
                        "description":"Owner for the foreign key.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"constraint_name",
                        "in":"path",
                        "description":"Name of the constraint for the foreign key.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on a specific foreign key.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-foreign_keys-{owner},{constraint_name}-get",
                "x-filename-id":"database-objects-foreign_keys-owner-constraint_name-get"
            }
        },
        "/database/objects/functions/":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get all functions",
                "description":"Returns all records from DBA_PROCEDURES where OBJECT_TYPE = 'FUNCTION'.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Description of all functions in the database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-functions--get",
                "x-filename-id":"database-objects-functions-get"
            }
        },
        "/database/objects/functions/{object_id}":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get a specific function",
                "description":"Returns corresponding record from DBA_PROCEDURES where OBJECT_TYPE = 'FUNCTION'.",
                "parameters":[
                    {
                        "name":"object_id",
                        "in":"path",
                        "description":"Object Identifier for the function.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information for the specified function.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-functions-{object_id}-get",
                "x-filename-id":"database-objects-functions-object_id-get"
            }
        },
        "/database/objects/indexes/":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get all indexes",
                "description":"Describes all the indexes in the database using DBA_INDEXES view.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Description of all indexes in the database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-indexes--get",
                "x-filename-id":"database-objects-indexes-get"
            }
        },
        "/database/objects/indexes/{owner},{index_name}":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get a specific index",
                "description":"Returns corresponding record from DBA_INDEXES view.",
                "parameters":[
                    {
                        "name":"owner",
                        "in":"path",
                        "description":"Owner for the index.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"index_name",
                        "in":"path",
                        "description":"Name of the index.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on a specific index.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-indexes-{owner},{index_name}-get",
                "x-filename-id":"database-objects-indexes-owner-index_name-get"
            }
        },
        "/database/objects/materialized_view_logs/":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get all materialized view logs",
                "description":"Returns all records from DBA_MVIEW_LOGS.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"All records from DBA_MVIEW_LOGS.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-materialized_view_logs--get",
                "x-filename-id":"database-objects-materialized_view_logs-get"
            }
        },
        "/database/objects/materialized_view_logs/{log_owner},{log_table}":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get information on a specific materialized view log",
                "description":"Returns the corresponding record from DBA_MVIEW_LOGS.",
                "parameters":[
                    {
                        "name":"log_owner",
                        "in":"path",
                        "description":"Owner for the materialized view log.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"log_table",
                        "in":"path",
                        "description":"Log table for the materialized view log.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on a specific materialized view log.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-materialized_view_logs-{log_owner},{log_table}-get",
                "x-filename-id":"database-objects-materialized_view_logs-log_owner-log_table-get"
            }
        },
        "/database/objects/packages/procedures/":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get all procedures defined in package",
                "description":"Returns all records from DBA_PROCEDURES where OBJECT_TYPE = 'PACKAGE' and PROCEDURE_NAME is not null.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Describes all procedures that are defined in a package.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-packages-procedures--get",
                "x-filename-id":"database-objects-packages-procedures-get"
            }
        },
        "/database/objects/packages/procedures/{object_id},{subprogram_id}":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get a procedure that is defined in package",
                "description":"Returns the corresponding record from DBA_PROCEDURES where OBJECT_TYPE = 'PACKAGE' and PROCEDURE_NAME is not null.",
                "parameters":[
                    {
                        "name":"object_id",
                        "in":"path",
                        "description":"Object identifier for the package the procedure belongs to.",
                        "required":true,
                        "type":"number"
                    },
                    {
                        "name":"subprogram_id",
                        "in":"path",
                        "description":"Subprogram identfier for the procedure.",
                        "required":true,
                        "type":"number"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on the specified procedure.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-packages-procedures-{object_id},{subprogram_id}-get",
                "x-filename-id":"database-objects-packages-procedures-object_id-subprogram_id-get"
            }
        },
        "/database/objects/partitions/":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get all partitions in the database",
                "description":"Returns all records from DBA_TAB_PARTITIONS.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Description of all partitiions in the database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-partitions--get",
                "x-filename-id":"database-objects-partitions-get"
            }
        },
        "/database/objects/partitions/{table_owner},{table_name},{partition_name}":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get a partition",
                "description":"Returns the specified partition information from DBA_TAB_PARTITIONS.",
                "parameters":[
                    {
                        "name":"table_owner",
                        "in":"path",
                        "description":"Owner for the index.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"table_name",
                        "in":"path",
                        "description":"Name of the table.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"partition_name",
                        "in":"path",
                        "description":"Name of the partition.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information for the specified partition.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-partitions-{table_owner},{table_name},{partition_name}-get",
                "x-filename-id":"database-objects-partitions-table_owner-table_name-partition_name-get"
            }
        },
        "/database/objects/synonyms/":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get all synonyms in the database",
                "description":"Returns all records on DBA_SYNONYMS.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Describes, using DBA_SYNONYMS view, all synonyms in the database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-synonyms--get",
                "x-filename-id":"database-objects-synonyms-get"
            }
        },
        "/database/objects/synonyms/{owner},{synonym_name}":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get a synonym ",
                "description":"Returns a record from DBA_SYNONYMS view.",
                "parameters":[
                    {
                        "name":"owner",
                        "in":"path",
                        "description":"Owner of the synonym.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"synonym_name",
                        "in":"path",
                        "description":"Name of the synonym.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on a specific synonym.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-synonyms-{owner},{synonym_name}-get",
                "x-filename-id":"database-objects-synonyms-owner-synonym_name-get"
            }
        },
        "/database/objects/tables/":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get all tables",
                "description":"Describes all the tables in the database using DBA_TABLES view.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"All tables in the database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-tables--get",
                "x-filename-id":"database-objects-tables-get"
            }
        },
        "/database/objects/tables/{owner},{table_name}":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get a specific table",
                "description":"Describes a specific table in the database using DBA_TABLES view.",
                "parameters":[
                    {
                        "name":"owner",
                        "in":"path",
                        "description":"Owner of the table.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"table_name",
                        "in":"path",
                        "description":"Name of the table.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"All tables in the database.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-tables-{owner},{table_name}-get",
                "x-filename-id":"database-objects-tables-owner-table_name-get"
            }
        },
        "/database/objects/types/":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get all object types",
                "description":"Describes all object types in the database. Uses DBA_TYPES view.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Description of all object types in the database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-types--get",
                "x-filename-id":"database-objects-types-get"
            }
        },
        "/database/objects/types/{owner},{type_name}":{
            "get":{
                "tags":[
                    "Data Dictionary"
                ],
                "summary":"Get an object type",
                "description":"Describes a specific object type in the database. Uses DBA_TYPES view.",
                "parameters":[
                    {
                        "name":"owner",
                        "in":"path",
                        "description":"Owner of the type.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"type_name",
                        "in":"path",
                        "description":"Name of the type.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on a specific object type.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-objects-types-{owner},{type_name}-get",
                "x-filename-id":"database-objects-types-owner-type_name-get"
            }
        },
        "/database/parameters/":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get all database parameters",
                "description":"Return records from GV$SYSTEM_PARAMETER.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Description of all database parameters.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-parameters--get",
                "x-filename-id":"database-parameters-get"
            }
        },
        "/database/parameters/{name}":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get a specific database parameter",
                "description":"Returns the corresponding record from GV$SYSTEM_PARAMETER.",
                "parameters":[
                    {
                        "name":"name",
                        "in":"path",
                        "description":"Name of the parameter.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on a specific database parameter.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-parameters-{name}-get",
                "x-filename-id":"database-parameters-name-get"
            }
        },
        "/database/pdbs/":{
            "get":{
                "tags":[
                    "Pluggable Database Lifecycle Management"
                ],
                "summary":"Get all pluggable databases",
                "description":"Oracle Multitenant license is required when there is more than one user-created pluggable database. Returns records from GV$PDBS in the corresponding Containter Database. This service requires db.cdb.adminUser credentials to be set in the pool configuration.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Description of all Pluggable Databases in the Container database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-pdbs--get",
                "x-filename-id":"database-pdbs-get"
            },
            "post":{
                "tags":[
                    "Pluggable Database Lifecycle Management"
                ],
                "summary":"Create a PDB from PDB$SEED or XML",
                "description":"Create a pluggable database from PDB$SEED or from an XML metadata file accessible to the database instance. The use of Oracle Transparent Data Encryption is only supported in topologies where the database and Oracle REST Data Services are on the same host. This service requires db.cdb.adminUser credentials to be set in the pool configuration.",
                "responses":{
                    "200":{
                        "description":"The response will indicate the successful execution of a series of PL/SQL statements, or return a set of PL/SQL statements that could be executed to create a pluggable database.",
                        "schema":{
                            "$ref":"#/definitions/RESTSQLCollection"
                        }
                    }
                },
                "parameters":[
                    {
                        "required":true,
                        "name":"body",
                        "in":"body",
                        "schema":{
                            "type":"object",
                            "required":[
                                "method",
                                "pdb_name",
                                "fileNameConversions"
                            ],
                            "properties":{
                                "method":{
                                    "type":"string",
                                    "description":"This property defines the type of operation.",
                                    "enum":[
                                        "CREATE",
                                        "PLUG"
                                    ]
                                },
                                "adminName":{
                                    "type":"string",
                                    "description":"Specify the administrator username when creating a PDB only."
                                },
                                "adminPwd":{
                                    "type":"string",
                                    "description":"Specify the administrator username when creating a PDB only."
                                },
                                "pdb_name":{
                                    "type":"string",
                                    "description":"New PDB name in case of a create/plug operation."
                                },
                                "asCopy":{
                                    "type":"boolean",
                                    "description":"As Copy is exclusive for PLUG operations."
                                },
                                "xmlFileName":{
                                    "type":"string",
                                    "description":"Exclusive property for PLUG operations."
                                },
                                "copyAction":{
                                    "type":"string",
                                    "description":"Exclusive property for PLUG operations.",
                                    "enum":[
                                        "COPY",
                                        "NOCOPY",
                                        "MOVE"
                                    ]
                                },
                                "sourceFileNameConversions":{
                                    "type":"string",
                                    "description":"Relevant for plug operations. As defined in the Oracle Multitenant Database documentation. Values can be a source filename convert pattern or NONE."
                                },
                                "fileNameConversions":{
                                    "type":"string",
                                    "description":"Relevant for create and plug operations. As defined in the  Oracle Multitenant Database documentation. Values can be a filename convert pattern or NONE."
                                },
                                "unlimitedStorage":{
                                    "type":"boolean",
                                    "description":"Relevant for create and plug operations. True for unlimited storage. Even when set to true, totalSize and tempSize MUST be specified in the request if method is CREATE."
                                },
                                "reuseTempFile":{
                                    "type":"boolean",
                                    "description":"Relevant for create and plug operations. True for temporary file reusage."
                                },
                                "totalSize":{
                                    "type":"string",
                                    "description":"Relevant for create and plug operations. Total size as defined in the Oracle Multitenant Database documentation. See size_clause description in Database SQL Language Reference documentation."
                                },
                                "tempSize":{
                                    "type":"string",
                                    "description":"Relevant for create and clone operations. Total size for temporary tablespace as defined in the Oracle Multitenant Database documentation. See size_clause description in Database SQL Language Reference documentation."
                                },
                                "tdePassword":{
                                    "type":"string",
                                    "description":"TDE password when applicable (optional). Can be used in create and plug operations."
                                },
                                "tdeImport":{
                                    "type":"boolean",
                                    "description":"TDE import for plug operations."
                                },
                                "tdeKeystorePath":{
                                    "type":"string",
                                    "description":"TDE keystore path is required if the tdeImport flag is set to true. Can be used in  plug operations."
                                },
                                "tdeSecret":{
                                    "type":"string",
                                    "description":"TDE secret is required if the tdeImport flag is set to true. Can be used in plug operations."
                                },
                                "getScript":{
                                    "type":"boolean",
                                    "description":"If defined, the response will contain a JSON object with the information of the script that was generated for execution. A database is not created when this property is set to true."
                                }
                            }
                        }
                    }
                ],
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-pdbs--post",
                "x-filename-id":"database-pdbs-post"
            }
        },
        "/database/pdbs/{pdb_name}/":{
            "get":{
                "tags":[
                    "Pluggable Database Lifecycle Management"
                ],
                "summary":"Get a pluggable database",
                "description":"Returns data from GV$PDBS for the specified database in the corresponding Containter Database. This service requires db.cdb.adminUser credentials to be set in the pool configuration.",
                "parameters":[
                    {
                        "name":"pdb_name",
                        "in":"path",
                        "description":"Name of the Pluggable Database.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Description of a specific Pluggable Database. All data files used by the Pluggable Database are also included.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-pdbs-{pdb_name}--get",
                "x-filename-id":"database-pdbs-pdb_name-get"
            },
            "post":{
                "tags":[
                    "Pluggable Database Lifecycle Management"
                ],
                "summary":"Clone or Unplug operations for PDBs",
                "description":"Clone or Unplug a PDB. These operations have a significant impact on the specified pluggable databases. The unplug operation will delete the PDB. Note that when cloning a pluggable database, the state of the source database will temporarily be set to OPEN READ ONLY for the duration of the operation and reset to its original state. The use of of Oracle Transparent Data Encryption is only supported in topologies where the database and Oracle REST Data Services are on the same host. This service requires db.cdb.adminUser credentials to be set in the pool configuration.",
                "parameters":[
                    {
                        "name":"pdb_name",
                        "in":"path",
                        "description":"Name of the Pluggable Database to clone from or unplug.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "required":true,
                        "name":"body",
                        "in":"body",
                        "schema":{
                            "type":"object",
                            "required":[
                                "method"
                            ],
                            "properties":{
                                "method":{
                                    "type":"string",
                                    "description":"This property defines the type of operation. Note that CLONE may change the state of the source PDB and UNPLUG will result in the PDB being dropped.",
                                    "enum":[
                                        "CLONE",
                                        "UNPLUG"
                                    ]
                                },
                                "pdb_name":{
                                    "type":"string",
                                    "description":"Source PDB in case of clone or the PDB to be unplugged in case of an unplug operation. This property is optional and the name defined in the URI takes priority."
                                },
                                "sparseClonePath":{
                                    "type":"string",
                                    "description":"A Path specified for sparse clone snapshot copy. (Optional)"
                                },
                                "clonePDBName":{
                                    "type":"string",
                                    "description":"The name of the new clone PDB. Required when method is specified as CLONE."
                                },
                                "fileNameConversions":{
                                    "type":"string",
                                    "description":"Relevant for clone operations. As defined in the Oracle Multitenant Database documentation."
                                },
                                "unlimitedStorage":{
                                    "type":"boolean",
                                    "description":"Relevant for clone operations. True for unlimited storage. Even when set to true, totalSize and tempSize MUST be specified in the request if method is CLONE."
                                },
                                "reuseTempFile":{
                                    "type":"boolean",
                                    "description":"Relevant for clone operations. True for temporary file reusage."
                                },
                                "totalSize":{
                                    "type":"string",
                                    "description":"Relevant for clone operations. Size of the tablespace. See size_clause description in Database SQL Language Reference documentation."
                                },
                                "tempSize":{
                                    "type":"string",
                                    "description":"Relevant for clone operations. Size of the temporary tablespace. See size_clause description in Database SQL Language Reference documentation."
                                },
                                "xmlFileName":{
                                    "type":"string",
                                    "description":"Relevant for Unplug operations."
                                },
                                "tdeExport":{
                                    "type":"boolean",
                                    "description":"TDE export for unplug operations."
                                },
                                "tdePassword":{
                                    "type":"string",
                                    "description":"TDE password for unplug operations only. This is required when the tdeExport flag is set to true."
                                },
                                "tdeKeystorePath":{
                                    "type":"string",
                                    "description":"TDE keystore path is required if the tdeExport flag is set to true. Can be used in unplug operations only."
                                },
                                "tdeSecret":{
                                    "type":"string",
                                    "description":"TDE secret is required if the tdeExport flag is set to true. Can be used in unplug operations only."
                                },
                                "getScript":{
                                    "type":"boolean",
                                    "description":"If defined, the response will contain a JSON object with the information of the script that was generated for execution. No action is taken when this property is true and only the script text is returned."
                                }
                            }
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The response will indicate the successful execution of a series of PL/SQL statements, or return a set of PL/SQL statements that could be executed to create a pluggable database.",
                        "schema":{
                            "$ref":"#/definitions/RESTSQLCollection"
                        }
                    }
                },
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-pdbs-{pdb_name}--post",
                "x-filename-id":"database-pdbs-pdb_name-post"
            },
            "delete":{
                "tags":[
                    "Pluggable Database Lifecycle Management"
                ],
                "summary":"Drop a PDB",
                "description":"Drop a pluggable databases. This service requires db.cdb.adminUser credentials to be set in the pool configuration.",
                "parameters":[
                    {
                        "name":"pdb_name",
                        "in":"path",
                        "description":"Name of the Pluggable Database.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"action",
                        "in":"query",
                        "description":"Specify if datafiles should be removed or not. The value can be INCLUDING or KEEP (default).",
                        "enum":[
                            "KEEP",
                            "INCLUDING"
                        ],
                        "default":"KEEP",
                        "type":"string"
                    },
                    {
                        "name":"getScript",
                        "in":"query",
                        "description":"If defined, the response will contain a JSON object with the information of the script that was generated for execution. Script execution does not happen and the database is not dropped.",
                        "type":"boolean"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The response will indicate the successful execution of a series of PL/SQL statements, or return a set of PL/SQL statements that could be executed to create a pluggable database.",
                        "schema":{
                            "$ref":"#/definitions/RESTSQLCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-pdbs-{pdb_name}--delete",
                "x-filename-id":"database-pdbs-pdb_name-delete"
            }
        },
        "/database/pdbs/{pdb_name}/status":{
            "get":{
                "tags":[
                    "Pluggable Database Lifecycle Management"
                ],
                "summary":"Return status information of a PDB",
                "description":"Returns status data from GV$PDBS for the specified database in the corresponding Containter Database. This service requires db.cdb.adminUser credentials to be set in the pool configuration.",
                "parameters":[
                    {
                        "name":"pdb_name",
                        "in":"path",
                        "description":"Name of the Pluggable Database.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Description of a specific Pluggable Database.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-pdbs-{pdb_name}-status-get",
                "x-filename-id":"database-pdbs-pdb_name-status-get"
            },
            "post":{
                "tags":[
                    "Pluggable Database Lifecycle Management"
                ],
                "summary":"Change the state of a PDB",
                "description":"Changes the state of a pluggable database.",
                "parameters":[
                    {
                        "name":"pdb_name",
                        "in":"path",
                        "description":"Name of the Pluggable Database.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "required":true,
                        "name":"body",
                        "in":"body",
                        "schema":{
                            "type":"object",
                            "required":[
                                "state",
                                "modifyOption"
                            ],
                            "properties":{
                                "state":{
                                    "type":"string",
                                    "description":"The target state of the PDB.",
                                    "enum":[
                                        "OPEN",
                                        "CLOSE"
                                    ]
                                },
                                "modifyOption":{
                                    "type":"string",
                                    "description":"Extra options for opening and closing a PDB.",
                                    "enum":[
                                        "IMMEDIATE",
                                        "NORMAL",
                                        "READ ONLY",
                                        "READ WRITE",
                                        "RESTRICTED"
                                    ]
                                },
                                "getScript":{
                                    "type":"boolean",
                                    "description":"If defined, the response will contain a JSON object with the information of the script that was generated for execution. The change of state does not happen."
                                }
                            }
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The response will indicate the successful execution of a series of PL/SQL statements, or return a set of PL/SQL statements that could be executed to create a pluggable database.",
                        "schema":{
                            "$ref":"#/definitions/RESTSQLCollection"
                        }
                    }
                },
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-pdbs-{pdb_name}-status-post",
                "x-filename-id":"database-pdbs-pdb_name-status-post"
            }
        },
        "/database/performance/active_sessions_history/":{
            "get":{
                "tags":[
                    "Performance"
                ],
                "summary":"Get all sampled session activity in the database",
                "description":"Oracle Diagnostics Pack licence is required for this service. Returns all records from GV$ACTIVE_SESSION_HISTORY.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Description of sampled session activity in the database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-performance-active_sessions_history--get",
                "x-filename-id":"database-performance-active_sessions_history-get"
            }
        },
        "/database/performance/active_sessions_history/{sample_id}":{
            "get":{
                "tags":[
                    "Performance"
                ],
                "summary":"Get a specified sampled session activity in the database",
                "description":"Oracle Diagnostics Pack licence is required for this service. Returns specified records from GV$ACTIVE_SESSION_HISTORY.",
                "parameters":[
                    {
                        "name":"sample_id",
                        "in":"path",
                        "description":"ID of the sample.",
                        "required":true,
                        "type":"number"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Active session history record.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-performance-active_sessions_history-{sample_id}-get",
                "x-filename-id":"database-performance-active_sessions_history-sample_id-get"
            }
        },
        "/database/performance/active_sessions_history_waits/":{
            "get":{
                "tags":[
                    "Performance"
                ],
                "summary":"Get the last 10 wait events for each active session",
                "description":"Return records from GV$SESSION_WAIT_HISTORY.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Description of session wait history.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-performance-active_sessions_history_waits--get",
                "x-filename-id":"database-performance-active_sessions_history_waits-get"
            }
        },
        "/database/performance/active_sessions_history_waits/{sid},{seq_number}/":{
            "get":{
                "tags":[
                    "Performance"
                ],
                "summary":"Get the specified wait event for specific active session",
                "description":"Return data from GV$SESSION_WAIT_HISTORY for the specified Session Identifier and Event Sequence Number.",
                "parameters":[
                    {
                        "name":"sid",
                        "in":"path",
                        "description":"Session Identifier.",
                        "required":true,
                        "type":"number"
                    },
                    {
                        "name":"seq_number",
                        "in":"path",
                        "description":"Sequence number of wait event; 1 is the most recent.",
                        "required":true,
                        "type":"number"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The session wait history for a particular session and event.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-performance-active_sessions_history_waits-{sid},{seq_number}--get",
                "x-filename-id":"database-performance-active_sessions_history_waits-sid-seq_number-get"
            }
        },
        "/database/performance/active_sessions_history_waits/{sid},{seq_number}/active_sql":{
            "get":{
                "tags":[
                    "Performance"
                ],
                "summary":"Get SQL statistics for a specific session",
                "description":"Return records from GV$SQLAREA for a given session with current waits on GV$SESSION_WAIT_HISTORY.",
                "parameters":[
                    {
                        "name":"sid",
                        "in":"path",
                        "description":"Session Identifier.",
                        "required":true,
                        "type":"number"
                    },
                    {
                        "name":"seq_number",
                        "in":"path",
                        "description":"Sequence number of wait event; 1 is the most recent.",
                        "required":true,
                        "type":"number"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Stastics on the SQL statements currently executing for specific session.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-performance-active_sessions_history_waits-{sid},{seq_number}-active_sql-get",
                "x-filename-id":"database-performance-active_sessions_history_waits-sid-seq_number-active_sql-get"
            }
        },
        "/database/performance/sql_statements/":{
            "get":{
                "tags":[
                    "Performance"
                ],
                "summary":"Get statistics for all SQL statements",
                "description":"Oracle Tuning Pack licence is required for this service. Returns data from GV$SQL with GV$SQL_MONITOR timing data.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Description of all SQL statements in the database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-performance-sql_statements--get",
                "x-filename-id":"database-performance-sql_statements-get"
            }
        },
        "/database/performance/sql_statements/{sql_id}/":{
            "get":{
                "tags":[
                    "Performance"
                ],
                "summary":"Get statistics for an SQL statement",
                "description":"Oracle Tuning Pack licence is required for this service. Returns data from GV$SQL with GV$SQL_MONITOR timing data for the specified SQL statement identifier.",
                "parameters":[
                    {
                        "name":"sql_id",
                        "in":"path",
                        "description":"SQL identifier.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Statistic for an SQL statement.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-performance-sql_statements-{sql_id}--get",
                "x-filename-id":"database-performance-sql_statements-sql_id-get"
            }
        },
        "/database/performance/sql_statements/{sql_id}/monitor/":{
            "get":{
                "tags":[
                    "Performance"
                ],
                "summary":"Get monitoring statistics for an SQL Statement",
                "description":"Oracle Tuning Pack licence is required for this service. Returns all GV$SQL_MONITOR records for a specified SQL_ID. GV$SQL_MONITOR will contain statistics only for SQL statements whose execution have been (or are being) monitored by Oracle.",
                "parameters":[
                    {
                        "name":"sql_id",
                        "in":"path",
                        "description":"SQL identifier.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Description of all monitored SQL statements in the database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-performance-sql_statements-{sql_id}-monitor--get",
                "x-filename-id":"database-performance-sql_statements-sql_id-monitor-get"
            }
        },
        "/database/performance/sql_statements/{sql_id}/monitor/{sql_exec_id},{sql_exec_start}/":{
            "get":{
                "tags":[
                    "Performance"
                ],
                "summary":"Get information on a monitored statement",
                "description":"Oracle Tuning Pack licence is required for this service. Returns information on a monitored statement from GV$SQL_MONITOR view.",
                "parameters":[
                    {
                        "name":"sql_id",
                        "in":"path",
                        "description":"SQL identifier.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"sql_exec_id",
                        "in":"path",
                        "description":"Execution identifier.",
                        "required":true,
                        "type":"number"
                    },
                    {
                        "name":"sql_exec_start",
                        "in":"path",
                        "description":"Time when the execution started.",
                        "required":true,
                        "format":"date-time",
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Descrption of a monitored SQL statement.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-performance-sql_statements-{sql_id}-monitor-{sql_exec_id},{sql_exec_start}--get",
                "x-filename-id":"database-performance-sql_statements-sql_id-monitor-sql_exec_id-sql_exec_start-get"
            }
        },
        "/database/performance/sql_statements/{sql_id}/monitor/{sql_exec_id},{sql_exec_start}/parallelism":{
            "get":{
                "tags":[
                    "Performance"
                ],
                "summary":"Get parallel execution information for specific statement execution",
                "description":"Oracle Tuning Pack licence is required for this service. Returns information on a monitored statement that is executed in parallel. Using GV$SQL_MONITOR view, the information includes the Parallel Coordinator and the instance(s) where it was executed.",
                "parameters":[
                    {
                        "name":"sql_id",
                        "in":"path",
                        "description":"SQL identifier.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"sql_exec_id",
                        "in":"path",
                        "description":"Execution identifier.",
                        "required":true,
                        "type":"number"
                    },
                    {
                        "name":"sql_exec_start",
                        "in":"path",
                        "description":"Time when the execution started.",
                        "required":true,
                        "format":"date-time",
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Returns information on a monitored statement. The structure of the data may vary depending on the database used.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-performance-sql_statements-{sql_id}-monitor-{sql_exec_id},{sql_exec_start}-parallelism-get",
                "x-filename-id":"database-performance-sql_statements-sql_id-monitor-sql_exec_id-sql_exec_start-parallelism-get"
            }
        },
        "/database/performance/sql_statements/{sql_id}/plan":{
            "get":{
                "tags":[
                    "Performance"
                ],
                "summary":"Get execution plan for an SQL Statement",
                "description":"Returns all GV$SQL_PLAN records for a specified SQL_ID.",
                "parameters":[
                    {
                        "name":"sql_id",
                        "in":"path",
                        "description":"SQL identifier.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Execution plan for the specified SQL statement.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-performance-sql_statements-{sql_id}-plan-get",
                "x-filename-id":"database-performance-sql_statements-sql_id-plan-get"
            }
        },
        "/database/performance/sql_statements/{sql_id}/history":{
            "get":{
                "tags":[
                    "Performance"
                ],
                "summary":"Get historical statistics for an SQL statement",
                "description":"Oracle Diagnostics Pack licence is required for this service. Returns DBA_HIST_SQLSTAT and DBA_HIST_SNAPSHOT records for a specified SQL_ID.",
                "parameters":[
                    {
                        "name":"sql_id",
                        "in":"path",
                        "description":"SQL identifier.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Historical statiscs for the specified SQL statement.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-performance-sql_statements-{sql_id}-history-get",
                "x-filename-id":"database-performance-sql_statements-sql_id-history-get"
            }
        },
        "/database/performance/sql_statements/{sql_id}/text":{
            "get":{
                "tags":[
                    "Performance"
                ],
                "summary":"Get SQL statement",
                "description":"Returns records from GV$SQL for specified SQL_ID.",
                "parameters":[
                    {
                        "name":"sql_id",
                        "in":"path",
                        "description":"SQL identifier.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The text of a specific SQL statement.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-performance-sql_statements-{sql_id}-text-get",
                "x-filename-id":"database-performance-sql_statements-sql_id-text-get"
            }
        },
        "/database/performance/top_sql_statements/":{
            "get":{
                "tags":[
                    "Performance"
                ],
                "summary":"Get all SQL statements ordered by CPU time descending",
                "description":"Returns records from GV$SQL ordered by CPU time descending, SQL Text ascending.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Description of the SQL statements in the database ordered to show the top SQL statements first.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-performance-top_sql_statements--get",
                "x-filename-id":"database-performance-top_sql_statements-get"
            }
        },
        "/database/performance/top_sql_statements/maximums":{
            "get":{
                "tags":[
                    "Performance"
                ],
                "summary":"Get SQL statistics maximum values",
                "description":"Returns maximum values for cpu time, elapsed time, disk reads, buffer gets and executions from GV$SQL.",
                "responses":{
                    "200":{
                        "description":"Maximum values for SQL statement performance statistics recorded in GV$SQL.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "parameters":[
                ],
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-performance-top_sql_statements-maximums-get",
                "x-filename-id":"database-performance-top_sql_statements-maximums-get"
            }
        },
        "/database/security/users/":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get all database users",
                "description":"Returns records from DBA_USERS.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Description of all users in the database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-security-users--get",
                "x-filename-id":"database-security-users-get"
            }
        },
        "/database/security/users/{username}":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get a specific database users",
                "description":"Returns corresponding record from DBA_USERS.",
                "parameters":[
                    {
                        "name":"username",
                        "in":"path",
                        "description":"Identifier for the user.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information on the specified user.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-security-users-{username}-get",
                "x-filename-id":"database-security-users-username-get"
            }
        },
        "/database/status":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get database status",
                "description":"Returns records from GV$INSTANCE and GV$DATABASE.",
                "responses":{
                    "200":{
                        "description":"Description of the database state.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "parameters":[
                ],
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-status-get",
                "x-filename-id":"database-status-get"
            }
        },
        "/database/storage/bytes":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get storage statistics",
                "description":"Returns info on bytes allocated for storage and how much is used. Using DBA_DATA_FILES data to calculate the total bytes allocated for storage along with DBA_TABLESPACE_USAGE_METRICS and DBA_TABLESPACES data to calculate the used bytes.",
                "responses":{
                    "200":{
                        "description":"Total bytes across all the data files and how much is used.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "parameters":[
                ],
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-storage-bytes-get",
                "x-filename-id":"database-storage-bytes-get"
            }
        },
        "/database/storage/tablespaces/":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get all tablespaces",
                "description":"Returns records from DBA_TABLESPACES along with data usage information from DBA_TABLESPACE_USAGE_METRICS.",
                "parameters":[
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Description of all tablespaces in the database.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-storage-tablespaces--get",
                "x-filename-id":"database-storage-tablespaces-get"
            }
        },
        "/database/storage/tablespaces/{tablespace_name}/":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get a tablespace",
                "description":"Returns data from DBA_TABLESPACES along with data usage information from DBA_TABLESPACE_USAGE_METRICS for a specific tablespace.",
                "parameters":[
                    {
                        "name":"tablespace_name",
                        "in":"path",
                        "description":"Name of the tablespace.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Tablespace information, including data usage, is returned. The response structure may vary depending on the database.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-storage-tablespaces-{tablespace_name}--get",
                "x-filename-id":"database-storage-tablespaces-tablespace_name-get"
            }
        },
        "/database/storage/tablespaces/{tablespace_name}/datafiles_usage":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get data file usage summary for a specific tablespace",
                "description":"Returns GV$DATAFILE and DBA_DATA_FILES records for a specific tablespace.",
                "parameters":[
                    {
                        "name":"tablespace_name",
                        "in":"path",
                        "description":"Name of the tablespace.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Tablespace data file usage.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-storage-tablespaces-{tablespace_name}-datafiles_usage-get",
                "x-filename-id":"database-storage-tablespaces-tablespace_name-datafiles_usage-get"
            }
        },
        "/database/storage/tablespaces/{tablespace_name}/datafiles/":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get data files for a tablespace",
                "description":"Returns records from DBA_DATA_FILES for a specific tablespace.",
                "parameters":[
                    {
                        "name":"tablespace_name",
                        "in":"path",
                        "description":"Name of the tablespace.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Desription of all data files for a specific tablespace.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-storage-tablespaces-{tablespace_name}-datafiles--get",
                "x-filename-id":"database-storage-tablespaces-tablespace_name-datafiles-get"
            }
        },
        "/database/storage/tablespaces/{tablespace_name}/datafiles/{file_id}/":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get tablespace data file",
                "description":"Returns data from DBA_DATA_FILES for a specific tablespace and file.",
                "parameters":[
                    {
                        "name":"tablespace_name",
                        "in":"path",
                        "description":"Name of the tablespace.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"file_id",
                        "in":"path",
                        "description":"File identifier.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information about the specified data file.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-storage-tablespaces-{tablespace_name}-datafiles-{file_id}--get",
                "x-filename-id":"database-storage-tablespaces-tablespace_name-datafiles-file_id-get"
            }
        },
        "/database/storage/tablespaces/{tablespace_name}/datafiles/{file_id}/usage":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get tablespace data file usage",
                "description":"Returns GV$DATAFILE and DBA_DATA_FILES records for a specific tablespace and file.",
                "parameters":[
                    {
                        "name":"tablespace_name",
                        "in":"path",
                        "description":"Name of the tablespace.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"file_id",
                        "in":"path",
                        "description":"File identifier.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Description of the space usage for the tablespace data file.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-storage-tablespaces-{tablespace_name}-datafiles-{file_id}-usage-get",
                "x-filename-id":"database-storage-tablespaces-tablespace_name-datafiles-file_id-usage-get"
            }
        },
        "/database/storage/tablespaces/{tablespace_name}/history":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get tablespace space usage history",
                "description":"Oracle Diagnostic Pack licence is required for this service. Returns DBA_HIST_TBSPC_SPACE_USAGE records where tablespace size has changed. These records are historical tablespace usage statistics. Recent changes in tablespace storage or usage will not appear until a snapshot is created.",
                "parameters":[
                    {
                        "name":"tablespace_name",
                        "in":"path",
                        "description":"Name of the tablespace.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Tablespace space usage history for the specified tablespace.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-storage-tablespaces-{tablespace_name}-history-get",
                "x-filename-id":"database-storage-tablespaces-tablespace_name-history-get"
            }
        },
        "/database/storage/tablespaces/{tablespace_name}/segments/":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get tablespace segments",
                "description":"Returns records from DBA_SEGMENTS for a specific tablespace.",
                "parameters":[
                    {
                        "name":"tablespace_name",
                        "in":"path",
                        "description":"Name of the tablespace.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Collection of records from DBA_SEGMENTS for the specified tablespace.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-storage-tablespaces-{tablespace_name}-segments--get",
                "x-filename-id":"database-storage-tablespaces-tablespace_name-segments-get"
            }
        },
        "/database/storage/tablespaces/{tablespace_name}/segments/{segment_name}":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get a tablespace segment",
                "description":"Returns data from DBA_SEGMENTS for a specific tablespace and segment.",
                "parameters":[
                    {
                        "name":"tablespace_name",
                        "in":"path",
                        "description":"Name of the tablespace.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"segment_name",
                        "in":"path",
                        "description":"Name of the segment.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"A specific record from DBA_SEGMENTS for the tablespace and segment name.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-storage-tablespaces-{tablespace_name}-segments-{segment_name}-get",
                "x-filename-id":"database-storage-tablespaces-tablespace_name-segments-segment_name-get"
            }
        },
        "/database/storage/tablespaces/{tablespace_name}/tempfiles_usage":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get temporary file usage summary for a specific tablespace",
                "description":"Returns records from GV$TEMPFILE and DBA_TEMP_FILES for a specific tablespace.",
                "parameters":[
                    {
                        "name":"tablespace_name",
                        "in":"path",
                        "description":"Name of the tablespace.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Summary information of all temporary files used by the tablespace.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-storage-tablespaces-{tablespace_name}-tempfiles_usage-get",
                "x-filename-id":"database-storage-tablespaces-tablespace_name-tempfiles_usage-get"
            }
        },
        "/database/storage/tablespaces/{tablespace_name}/tempfiles/":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get temporary files for a tablespace",
                "description":"Returns records from DBA_TEMP_FILES for a specific tablespace.",
                "parameters":[
                    {
                        "name":"tablespace_name",
                        "in":"path",
                        "description":"Name of the tablespace.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "description":"The maximum number of records to return.",
                        "required":false,
                        "format":"int32",
                        "type":"integer"
                    },
                    {
                        "name":"q",
                        "in":"query",
                        "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                        "required":false,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Description of all temporary files used by the specified tablespace.",
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-storage-tablespaces-{tablespace_name}-tempfiles--get",
                "x-filename-id":"database-storage-tablespaces-tablespace_name-tempfiles-get"
            }
        },
        "/database/storage/tablespaces/{tablespace_name}/tempfiles/{file_id}/":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get tablespace temporary file",
                "description":"Returns data from DBA_TEMP_FILES for a specific tablespace and file.",
                "parameters":[
                    {
                        "name":"tablespace_name",
                        "in":"path",
                        "description":"Name of the tablespace.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"file_id",
                        "in":"path",
                        "description":"File identifier.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Information about the specified temporary file.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-storage-tablespaces-{tablespace_name}-tempfiles-{file_id}--get",
                "x-filename-id":"database-storage-tablespaces-tablespace_name-tempfiles-file_id-get"
            }
        },
        "/database/storage/tablespaces/{tablespace_name}/tempfiles/{file_id}/usage":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get tablespace temporary file usage",
                "description":"Returns GV$DATAFILE and DBA_TEMP_FILES records for a specific tablespace and file.",
                "parameters":[
                    {
                        "name":"tablespace_name",
                        "in":"path",
                        "description":"Name of the tablespace.",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"file_id",
                        "in":"path",
                        "description":"File identifier.",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Usage information about the the temporary file.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-storage-tablespaces-{tablespace_name}-tempfiles-{file_id}-usage-get",
                "x-filename-id":"database-storage-tablespaces-tablespace_name-tempfiles-file_id-usage-get"
            }
        },
        "/database/version":{
            "get":{
                "tags":[
                    "General"
                ],
                "summary":"Get database version",
                "description":"Returns records from GV$INSTANCE and GV$VERSION.",
                "responses":{
                    "200":{
                        "description":"Version information about the database.",
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                },
                "parameters":[
                ],
                "produces":[
                    "application/json"
                ],
                "x-internal-id":"database-version-get",
                "x-filename-id":"database-version-get"
            }
        },
        "/rhp-restapi/rhp/databases":{
            "patch":{
                "security":[
                    {
                        "basicAuthentication":[
                        ]
                    }
                ],
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Patch Unmanaged Software Homes"
                ],
                "summary":"Patch an unmanaged Oracle Database Software home",
                "description":"Moves a database from the unamanged Oracle Database Software home to a patched working copy.",
                "operationId":"moveDatabase",
                "parameters":[
                    {
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/MoveDatabaseBody"
                        }
                    },
                    {
                        "$ref":"#/parameters/authorizationHeader"
                    }
                ],
                "responses":{
                    "202":{
                        "$ref":"#/responses/jobAccepted202Response"
                    },
                    "400":{
                        "$ref":"#/responses/badRequestResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-databases-patch",
                "x-filename-id":"rhp-restapi-rhp-databases-patch"
            }
        },
        "/rhp-restapi/rhp/databases/{dbUniqueName}":{
            "put":{
                "security":[
                    {
                        "basicAuthentication":[
                        ]
                    }
                ],
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Upgrade Unmanaged Software Homes"
                ],
                "summary":"Upgrade an unmanaged Oracle Database Software home",
                "description":"Upgrade a database on the specified Oracle Database Software home",
                "operationId":"upgradeDatabase",
                "parameters":[
                    {
                        "$ref":"#/parameters/dbUNamePathParam"
                    },
                    {
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/UpgradeDatabaseBody"
                        }
                    },
                    {
                        "$ref":"#/parameters/authorizationHeader"
                    }
                ],
                "responses":{
                    "202":{
                        "$ref":"#/responses/jobAccepted202Response"
                    },
                    "400":{
                        "$ref":"#/responses/badRequestResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-databases-{dbUniqueName}-put",
                "x-filename-id":"rhp-restapi-rhp-databases-dbuniquename-put"
            }
        },
        "/rhp-restapi/rhp/gihome/{destWcId}":{
            "put":{
                "security":[
                    {
                        "basicAuthentication":[
                        ]
                    }
                ],
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Upgrade Unmanaged Software Homes"
                ],
                "summary":"Upgrade unmanaged Grid Infrastructure Software home",
                "description":"Upgrades the Oracle Grid Infrastructure from the source home path to the destination working copy.",
                "operationId":"upgradeGihome",
                "parameters":[
                    {
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/UpgradeGihomeBody"
                        }
                    },
                    {
                        "$ref":"#/parameters/destWcIdPatParam"
                    },
                    {
                        "$ref":"#/parameters/authorizationHeader"
                    }
                ],
                "responses":{
                    "202":{
                        "$ref":"#/responses/jobAccepted202Response"
                    },
                    "400":{
                        "$ref":"#/responses/badRequestResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-gihome-{destWcId}-put",
                "x-filename-id":"rhp-restapi-rhp-gihome-destwcid-put"
            },
            "patch":{
                "security":[
                    {
                        "basicAuthentication":[
                        ]
                    }
                ],
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Patch Unmanaged Software Homes"
                ],
                "summary":"Patch unmanaged Grid Infrastructure Software home",
                "description":"Moves the Oracle Grid Infrastructure from the source home path to the destination working copy.",
                "operationId":"moveGihome",
                "parameters":[
                    {
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/MoveGihomeBody"
                        }
                    },
                    {
                        "$ref":"#/parameters/destWcIdPatParam"
                    },
                    {
                        "$ref":"#/parameters/authorizationHeader"
                    }
                ],
                "responses":{
                    "202":{
                        "$ref":"#/responses/jobAccepted202Response"
                    },
                    "400":{
                        "$ref":"#/responses/badRequestResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-gihome-{destWcId}-patch",
                "x-filename-id":"rhp-restapi-rhp-gihome-destwcid-patch"
            }
        },
        "/rhp-restapi/rhp/images":{
            "get":{
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Manage Gold Images"
                ],
                "summary":"Lists all the gold images",
                "description":"Display the name of all the existing gold images in the server.",
                "operationId":"queryAllImages",
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "$ref":"#/responses/okArrayOfItemsResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-images-get",
                "x-filename-id":"rhp-restapi-rhp-images-get"
            },
            "post":{
                "security":[
                    {
                        "basicAuthentication":[
                        ]
                    }
                ],
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Manage Gold Images"
                ],
                "summary":"Schedules an import image operation",
                "description":"Create a gold image from the Software home specified in the body of this request, can be of Oracle Database, Grid Infrastructure or any other Software home.",
                "operationId":"importImage",
                "parameters":[
                    {
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ImportImageBody"
                        }
                    },
                    {
                        "$ref":"#/parameters/authorizationHeader"
                    }
                ],
                "responses":{
                    "202":{
                        "$ref":"#/responses/jobAccepted202Response"
                    },
                    "400":{
                        "$ref":"#/responses/badRequestResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-images-post",
                "x-filename-id":"rhp-restapi-rhp-images-post"
            }
        },
        "/rhp-restapi/rhp/images/search":{
            "get":{
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Manage Gold Images"
                ],
                "summary":"Lists all the gold images that matches the specified query parameters.",
                "description":"Display the name of all the existing gold images in the server that matches the search parameters specified.",
                "operationId":"searchImage",
                "parameters":[
                    {
                        "$ref":"#/parameters/clientQueryParam"
                    },
                    {
                        "$ref":"#/parameters/imageTypeQueryParam"
                    },
                    {
                        "name":"version",
                        "in":"query",
                        "required":false,
                        "type":"string",
                        "description":"The version of the images."
                    },
                    {
                        "name":"platform",
                        "in":"query",
                        "required":false,
                        "type":"string",
                        "description":"The OS platform to which the images correspond."
                    },
                    {
                        "$ref":"#/parameters/serverNameQueryParam"
                    },
                    {
                        "name":"drift",
                        "in":"query",
                        "required":false,
                        "type":"string",
                        "description":"Lists the bug fixes not included in the golden image."
                    }
                ],
                "responses":{
                    "200":{
                        "$ref":"#/responses/okArrayOfItemsResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-images-search-get",
                "x-filename-id":"rhp-restapi-rhp-images-search-get"
            }
        },
        "/rhp-restapi/rhp/images/{imageId}":{
            "get":{
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Manage Gold Images"
                ],
                "summary":"Display the configuration of the specified image",
                "description":"Display the details of the gold image associated to the given image name.",
                "operationId":"getImageByName",
                "parameters":[
                    {
                        "$ref":"#/parameters/imageNamePathParam"
                    },
                    {
                        "name":"dbtemplate",
                        "in":"query",
                        "required":false,
                        "type":"boolean",
                        "default":false,
                        "description":"Displays template file names in the default template directory."
                    }
                ],
                "responses":{
                    "200":{
                        "$ref":"#/responses/okSingleImageResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-images-{imageId}-get",
                "x-filename-id":"rhp-restapi-rhp-images-imageid-get"
            },
            "delete":{
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Manage Gold Images"
                ],
                "summary":"Deletes the specified image name",
                "description":"Delete the gold image represented by the given image name.",
                "operationId":"deleteImageByName",
                "parameters":[
                    {
                        "$ref":"#/parameters/imageNamePathParam"
                    }
                ],
                "responses":{
                    "200":{
                        "$ref":"#/responses/okDeleteImageResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-images-{imageId}-delete",
                "x-filename-id":"rhp-restapi-rhp-images-imageid-delete"
            }
        },
        "/rhp-restapi/rhp/jobs":{
            "get":{
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Manage Operation Results"
                ],
                "summary":"Get all the jobs",
                "description":"Returns a list of all the jobs available in the server.",
                "operationId":"listAllJobs",
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "$ref":"#/responses/okArrayOfItemsResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-jobs-get",
                "x-filename-id":"rhp-restapi-rhp-jobs-get"
            }
        },
        "/rhp-restapi/rhp/jobs/{jobId}":{
            "get":{
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Manage Operation Results"
                ],
                "summary":"Get job details",
                "description":"Return the configuration of the Job resource associated to the given job Id.",
                "operationId":"getJobById",
                "parameters":[
                    {
                        "$ref":"#/parameters/jobIdPathParam"
                    }
                ],
                "responses":{
                    "200":{
                        "$ref":"#/responses/okSingleJobResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-jobs-{jobId}-get",
                "x-filename-id":"rhp-restapi-rhp-jobs-jobid-get"
            }
        },
        "/rhp-restapi/rhp/jobs/{jobId}/output":{
            "get":{
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Manage Operation Results"
                ],
                "summary":"Get the job output and result",
                "description":"Gets the job output presenting the job result and progress, which can be paginated using the limit and offset parameters.",
                "operationId":"getJobOutput",
                "parameters":[
                    {
                        "$ref":"#/parameters/jobIdPathParam"
                    },
                    {
                        "name":"limit",
                        "in":"query",
                        "required":false,
                        "type":"integer",
                        "default":0,
                        "description":"The number of lines from the job result to be included in the job output resource."
                    },
                    {
                        "name":"offset",
                        "in":"query",
                        "required":false,
                        "type":"integer",
                        "default":0,
                        "description":"The identifier of the first line on the job result to be included in the job output resource."
                    }
                ],
                "responses":{
                    "200":{
                        "$ref":"#/responses/okSingleJobOutputResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-jobs-{jobId}-output-get",
                "x-filename-id":"rhp-restapi-rhp-jobs-jobid-output-get"
            }
        },
        "/rhp-restapi/rhp/series":{
            "get":{
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Manage Gold Images"
                ],
                "summary":"Get all the series",
                "description":"Returns a list of series names available in the server.",
                "operationId":"getAllSeries",
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "$ref":"#/responses/okArrayOfItemsResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-series-get",
                "x-filename-id":"rhp-restapi-rhp-series-get"
            }
        },
        "/rhp-restapi/rhp/series/search":{
            "get":{
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Manage Gold Images"
                ],
                "summary":"Search series matching certain parameters",
                "description":"Returns a list of the series that matches either the image or the server provided.",
                "operationId":"searchSeries",
                "parameters":[
                    {
                        "$ref":"#/parameters/imageNameQueryParam"
                    },
                    {
                        "$ref":"#/parameters/serverNameQueryParam"
                    }
                ],
                "responses":{
                    "200":{
                        "$ref":"#/responses/okArrayOfItemsResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-series-search-get",
                "x-filename-id":"rhp-restapi-rhp-series-search-get"
            }
        },
        "/rhp-restapi/rhp/series/{seriesId}":{
            "get":{
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Manage Gold Images"
                ],
                "summary":"Get image series",
                "description":"Return the series resource details of the seris associated to the given series Id and server",
                "operationId":"getSeriesById",
                "parameters":[
                    {
                        "$ref":"#/parameters/seriesIdPathParam"
                    },
                    {
                        "$ref":"#/parameters/serverNameQueryParam"
                    }
                ],
                "responses":{
                    "200":{
                        "$ref":"#/responses/okSingleSeriesResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-series-{seriesId}-get",
                "x-filename-id":"rhp-restapi-rhp-series-seriesid-get"
            },
            "post":{
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Manage Gold Images"
                ],
                "summary":"Add a new image series",
                "description":"Creates a new series resource with the given name in the seriesId parameter.",
                "operationId":"addSeries",
                "parameters":[
                    {
                        "$ref":"#/parameters/seriesIdPathParam"
                    },
                    {
                        "in":"body",
                        "name":"body",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/AddSeriesBody"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "$ref":"#/responses/okSingleSeriesResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-series-{seriesId}-post",
                "x-filename-id":"rhp-restapi-rhp-series-seriesid-post"
            },
            "delete":{
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Manage Gold Images"
                ],
                "summary":"Delete image series",
                "description":"Delete the image series from the server, but leave all the images intact.",
                "operationId":"deleteSeriesById",
                "parameters":[
                    {
                        "$ref":"#/parameters/seriesIdPathParam"
                    },
                    {
                        "in":"body",
                        "name":"body",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/DeleteSeriesBody"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "$ref":"#/responses/okDeleteSeriesResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-series-{seriesId}-delete",
                "x-filename-id":"rhp-restapi-rhp-series-seriesid-delete"
            }
        },
        "/rhp-restapi/rhp/series/{seriesId}/images/{imageId}":{
            "post":{
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Manage Gold Images"
                ],
                "summary":"Add image to series",
                "description":"Add an existing image to an existing series.",
                "operationId":"insertImageIntoSeries",
                "parameters":[
                    {
                        "$ref":"#/parameters/seriesIdPathParam"
                    },
                    {
                        "$ref":"#/parameters/imageNamePathParam"
                    },
                    {
                        "in":"body",
                        "name":"body",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/InsertImageSeriesBody"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "$ref":"#/responses/okSingleSeriesResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-series-{seriesId}-images-{imageId}-post",
                "x-filename-id":"rhp-restapi-rhp-series-seriesid-images-imageid-post"
            },
            "delete":{
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Manage Gold Images"
                ],
                "summary":"Remove image from series",
                "description":"Removes an existing image from an existing series.",
                "operationId":"deleteImageFromSeries",
                "parameters":[
                    {
                        "$ref":"#/parameters/seriesIdPathParam"
                    },
                    {
                        "$ref":"#/parameters/imageNamePathParam"
                    }
                ],
                "responses":{
                    "200":{
                        "$ref":"#/responses/okSingleSeriesResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-series-{seriesId}-images-{imageId}-delete",
                "x-filename-id":"rhp-restapi-rhp-series-seriesid-images-imageid-delete"
            }
        },
        "/rhp-restapi/rhp/series/{seriesId}/users/{userId}":{
            "post":{
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Manage Gold Images"
                ],
                "summary":"Subscribe a user to a series",
                "description":"Add an existing user to the subscribed users list for an existing series.",
                "operationId":"subscribeUserToSeries",
                "parameters":[
                    {
                        "$ref":"#/parameters/seriesIdPathParam"
                    },
                    {
                        "$ref":"#/parameters/osUserNamePathParam"
                    },
                    {
                        "$ref":"#/parameters/subscribeUserSeriesBodyParam"
                    }
                ],
                "responses":{
                    "200":{
                        "$ref":"#/responses/okSingleSeriesResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-series-{seriesId}-users-{userId}-post",
                "x-filename-id":"rhp-restapi-rhp-series-seriesid-users-userid-post"
            },
            "delete":{
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Manage Gold Images"
                ],
                "summary":"Unsubscribe a user from a series",
                "description":"Removes an existing user from the subscribed users list for an existing series.",
                "operationId":"unsubscribeUserFromSeries",
                "parameters":[
                    {
                        "$ref":"#/parameters/seriesIdPathParam"
                    },
                    {
                        "$ref":"#/parameters/osUserNamePathParam"
                    },
                    {
                        "$ref":"#/parameters/subscribeUserSeriesBodyParam"
                    }
                ],
                "responses":{
                    "200":{
                        "$ref":"#/responses/okSingleSeriesResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-series-{seriesId}-users-{userId}-delete",
                "x-filename-id":"rhp-restapi-rhp-series-seriesid-users-userid-delete"
            }
        },
        "/rhp-restapi/rhp/workingcopies":{
            "get":{
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Provisioning Software homes"
                ],
                "summary":"Get all working copies",
                "description":"Returns a list of names working copies available on the server.",
                "operationId":"getAllWorkingcopies",
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "$ref":"#/responses/okArrayOfItemsResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-workingcopies-get",
                "x-filename-id":"rhp-restapi-rhp-workingcopies-get"
            },
            "post":{
                "security":[
                    {
                        "basicAuthentication":[
                        ]
                    }
                ],
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Provisioning Software homes"
                ],
                "summary":"Create working copy",
                "description":"Creates a new working copy using an existing gold image",
                "operationId":"addWorkingcopy",
                "parameters":[
                    {
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/AddWorkingCopyBody"
                        }
                    },
                    {
                        "$ref":"#/parameters/authorizationHeader"
                    }
                ],
                "responses":{
                    "202":{
                        "$ref":"#/responses/jobAccepted202Response"
                    },
                    "400":{
                        "$ref":"#/responses/badRequestResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-workingcopies-post",
                "x-filename-id":"rhp-restapi-rhp-workingcopies-post"
            }
        },
        "/rhp-restapi/rhp/workingcopies/imagetypes/{imageType}":{
            "get":{
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Provisioning Software homes"
                ],
                "summary":"Get working copies based on a certain image type",
                "description":"Return the list of working copies based on a given golden image.",
                "operationId":"listWorkingCopiesByImageType",
                "parameters":[
                    {
                        "$ref":"#/parameters/imageTypePathParam"
                    }
                ],
                "responses":{
                    "200":{
                        "$ref":"#/responses/okArrayOfItemsResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-workingcopies-imagetypes-{imageType}-get",
                "x-filename-id":"rhp-restapi-rhp-workingcopies-imagetypes-imagetype-get"
            }
        },
        "/rhp-restapi/rhp/workingcopies/search":{
            "get":{
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Provisioning Software homes"
                ],
                "summary":"Search working copies",
                "description":"that matches the given parameters.",
                "operationId":"searchWorkingcopies",
                "parameters":[
                    {
                        "$ref":"#/parameters/clientQueryParam"
                    },
                    {
                        "$ref":"#/parameters/imageNameQueryParam"
                    }
                ],
                "responses":{
                    "200":{
                        "$ref":"#/responses/okArrayOfItemsResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-workingcopies-search-get",
                "x-filename-id":"rhp-restapi-rhp-workingcopies-search-get"
            }
        },
        "/rhp-restapi/rhp/workingcopies/{workingCopyId}":{
            "get":{
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Provisioning Software homes"
                ],
                "summary":"Get working copy details",
                "description":"Return the working copy configuration.",
                "operationId":"getWorkingcopyByName",
                "parameters":[
                    {
                        "$ref":"#/parameters/workingcopyIdPathParam"
                    }
                ],
                "responses":{
                    "200":{
                        "$ref":"#/responses/okSingleWorkingcopyResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-workingcopies-{workingCopyId}-get",
                "x-filename-id":"rhp-restapi-rhp-workingcopies-workingcopyid-get"
            }
        },
        "/rhp-restapi/rhp/workingcopies/{workingCopyId}/databases":{
            "post":{
                "security":[
                    {
                        "basicAuthentication":[
                        ]
                    }
                ],
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Provisioning Software homes"
                ],
                "summary":"Create Oracle Database Software",
                "description":"Provision a new Oracle Database on a managed working copy.",
                "operationId":"addDatabaseManagedWC",
                "parameters":[
                    {
                        "$ref":"#/parameters/workingcopyIdPathParam"
                    },
                    {
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/AddDatabaseBody"
                        }
                    },
                    {
                        "$ref":"#/parameters/authorizationHeader"
                    }
                ],
                "responses":{
                    "202":{
                        "$ref":"#/responses/jobAccepted202Response"
                    },
                    "400":{
                        "$ref":"#/responses/badRequestResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-workingcopies-{workingCopyId}-databases-post",
                "x-filename-id":"rhp-restapi-rhp-workingcopies-workingcopyid-databases-post"
            },
            "patch":{
                "security":[
                    {
                        "basicAuthentication":[
                        ]
                    }
                ],
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Patch Software homes"
                ],
                "summary":"Patch an Oracle Database Software home",
                "description":"Moves a database from a source working copy to a patched working copy.",
                "operationId":"moveDatabaseManagedWC",
                "parameters":[
                    {
                        "$ref":"#/parameters/workingcopyIdPathParam"
                    },
                    {
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/MoveDatabaseBody"
                        }
                    },
                    {
                        "$ref":"#/parameters/authorizationHeader"
                    }
                ],
                "responses":{
                    "202":{
                        "$ref":"#/responses/jobAccepted202Response"
                    },
                    "400":{
                        "$ref":"#/responses/badRequestResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-workingcopies-{workingCopyId}-databases-patch",
                "x-filename-id":"rhp-restapi-rhp-workingcopies-workingcopyid-databases-patch"
            }
        },
        "/rhp-restapi/rhp/workingcopies/{workingCopyId}/databases/{dbUniqueName}":{
            "put":{
                "security":[
                    {
                        "basicAuthentication":[
                        ]
                    }
                ],
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Upgrade Software homes"
                ],
                "summary":"Upgrade an Oracle Database Software home",
                "description":"Upgrade a database from a source working copy to a patched working copy.",
                "operationId":"upgradeDatabaseManagedWC",
                "parameters":[
                    {
                        "$ref":"#/parameters/workingcopyIdPathParam"
                    },
                    {
                        "$ref":"#/parameters/dbUNamePathParam"
                    },
                    {
                        "in":"body",
                        "name":"body",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/UpgradeDatabaseBody"
                        }
                    }
                ],
                "responses":{
                    "202":{
                        "$ref":"#/responses/jobAccepted202Response"
                    },
                    "400":{
                        "$ref":"#/responses/badRequestResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-workingcopies-{workingCopyId}-databases-{dbUniqueName}-put",
                "x-filename-id":"rhp-restapi-rhp-workingcopies-workingcopyid-databases-dbuniquename-put"
            }
        },
        "/rhp-restapi/rhp/workingcopies/{workingCopyId}/gihome/{destWcId}":{
            "put":{
                "security":[
                    {
                        "basicAuthentication":[
                        ]
                    }
                ],
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Upgrade Software homes"
                ],
                "summary":"Upgrade Grid Infrastructure Software home",
                "description":"Upgrades the Oracle Grid Infrastructure from the source working copy to the destination working copy.",
                "operationId":"upgradeGihomeManagedWC",
                "parameters":[
                    {
                        "$ref":"#/parameters/workingcopyIdPathParam"
                    },
                    {
                        "$ref":"#/parameters/destWcIdPatParam"
                    },
                    {
                        "in":"body",
                        "name":"body",
                        "required":false,
                        "schema":{
                            "$ref":"#/definitions/UpgradeGihomeBody"
                        }
                    }
                ],
                "responses":{
                    "202":{
                        "$ref":"#/responses/jobAccepted202Response"
                    },
                    "400":{
                        "$ref":"#/responses/badRequestResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-workingcopies-{workingCopyId}-gihome-{destWcId}-put",
                "x-filename-id":"rhp-restapi-rhp-workingcopies-workingcopyid-gihome-destwcid-put"
            },
            "patch":{
                "security":[
                    {
                        "basicAuthentication":[
                        ]
                    }
                ],
                "tags":[
                    "Fleet Patching and Provisioning/RHP - Patch Software homes"
                ],
                "summary":"Patch Grid Infrastructure Software home",
                "description":"Moves the Oracle Grid Infrastructure from the source working copy to the destination working copy.",
                "operationId":"moveGihomeManagedWC",
                "parameters":[
                    {
                        "$ref":"#/parameters/workingcopyIdPathParam"
                    },
                    {
                        "$ref":"#/parameters/destWcIdPatParam"
                    },
                    {
                        "in":"body",
                        "name":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/MoveGihomeBody"
                        }
                    }
                ],
                "responses":{
                    "202":{
                        "$ref":"#/responses/jobAccepted202Response"
                    },
                    "400":{
                        "$ref":"#/responses/badRequestResponse"
                    },
                    "default":{
                        "$ref":"#/responses/errorResponse"
                    }
                },
                "x-internal-id":"rhp-restapi-rhp-workingcopies-{workingCopyId}-gihome-{destWcId}-patch",
                "x-filename-id":"rhp-restapi-rhp-workingcopies-workingcopyid-gihome-destwcid-patch"
            }
        }
    },
    "swagger":"2.0",
    "definitions":{
        "RESTSQLCollection":{
            "type":"object",
            "properties":{
                "items":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/SQLItem"
                    }
                },
                "env":{
                    "type":"string"
                }
            }
        },
        "SQLItem":{
            "type":"object",
            "properties":{
                "statementId":{
                    "type":"integer"
                },
                "response":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "result":{
                    "type":"integer"
                }
            }
        },
        "ItemsCollection":{
            "type":"object",
            "properties":{
                "items":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ResourceItem"
                    }
                },
                "hasMore":{
                    "type":"boolean"
                },
                "limit":{
                    "type":"integer"
                },
                "offset":{
                    "type":"integer"
                },
                "count":{
                    "type":"integer"
                },
                "links":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/LinkRelation"
                    }
                }
            }
        },
        "ResourceItem":{
            "type":"object",
            "additionalProperties":true,
            "properties":{
                "links":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/LinkRelation"
                    }
                }
            }
        },
        "LinkRelation":{
            "type":"object",
            "properties":{
                "rel":{
                    "type":"string"
                },
                "href":{
                    "type":"string"
                }
            },
            "required":[
                "rel",
                "href"
            ]
        },
        "UpgradeGihomeBody":{
            "type":"object",
            "properties":{
                "sourcewc":{
                    "type":"string",
                    "description":"Name of the source working copy from which the Oracle Grid Infrastructure needs to be upgraded."
                },
                "destwc":{
                    "type":"string",
                    "description":"Name of the destination working copy to which the Oracle Grid Infrastructure needs to be upgraded."
                },
                "image":{
                    "type":"string",
                    "description":"Image name from the configured images."
                },
                "targetnode":{
                    "type":"string",
                    "description":"Name of a node in a remote cluster with no Rapid Home Provisioning Client."
                },
                "sourcehome":{
                    "type":"string",
                    "description":"Source Oracle home path."
                },
                "ignoreprereq":{
                    "type":"boolean",
                    "default":false,
                    "description":"To ignore the CVU pre-requisite checks."
                },
                "path":{
                    "type":"string",
                    "description":"The absolute path for the destination working copy."
                },
                "root":{
                    "type":"boolean",
                    "default":false,
                    "description":"Use root credentials to access the remote node."
                },
                "sudoUser":{
                    "type":"string",
                    "description":"perform super user operations as sudo user name."
                },
                "sudoPath":{
                    "type":"string",
                    "description":"location of sudo binary."
                },
                "superUserPasswd":{
                    "type":"string",
                    "description":"The password for the super user account."
                },
                "authArgs":{
                    "type":"object",
                    "description":"Additional properties for the selected authentication plugin.",
                    "additionalProperties":{
                        "type":"string"
                    }
                },
                "auth":{
                    "type":"string",
                    "description":"Use an authentication plugin to access the remote node."
                },
                "eval":{
                    "type":"boolean",
                    "default":false,
                    "description":"Evaluate without executing the command."
                },
                "schedule":{
                    "type":"string",
                    "description":"Preferred time to execute the operation, in ISO-8601 format. For example: 2016-12-21T19:13:17+05."
                }
            }
        },
        "AddDatabaseBody":{
            "type":"object",
            "properties":{
                "pqpool":{
                    "type":"string",
                    "description":"Existing PQ pool name"
                },
                "newpqpool":{
                    "type":"string",
                    "description":"Server pool name for pool to be created"
                },
                "pqcardinality":{
                    "type":"string",
                    "description":"Cardinality for new PQ pool"
                },
                "dbtemplate":{
                    "type":"string",
                    "description":"Absolute file path for the template file or relative path to the image home directory on Rapid Home Provisioning Server"
                },
                "targetnode":{
                    "type":"string",
                    "description":"Node on which operation needs to be executed"
                },
                "datafileDestination":{
                    "type":"string",
                    "description":"Data file destination location or ASM disk group name"
                },
                "numberOfPDBs":{
                    "type":"integer",
                    "format":"int32",
                    "description":"Number of PDBs to be created"
                },
                "pdbName":{
                    "type":"string",
                    "description":"The pdbName prefix if one or more PDBs need to be created"
                },
                "cdb":{
                    "type":"boolean",
                    "default":false,
                    "description":"To create database as container database"
                },
                "dbtype":{
                    "type":"string",
                    "enum":[
                        "RAC",
                        "RACONENODE",
                        "SINGLE"
                    ],
                    "description":"Type of database: Oracle RAC One Node or Oracle RAC or Single Instance"
                },
                "useractiondata":{
                    "type":"string",
                    "description":"Value to be passed to useractiondata parameter of useraction script"
                },
                "root":{
                    "type":"boolean",
                    "default":false,
                    "description":"Use root credentials to access the remote node."
                },
                "sudoUser":{
                    "type":"string",
                    "description":"perform super user operations as sudo user name."
                },
                "sudoPath":{
                    "type":"string",
                    "description":"location of sudo binary."
                },
                "superUserPasswd":{
                    "type":"string",
                    "description":"The password for the super user account."
                },
                "authArgs":{
                    "type":"object",
                    "description":"Additional properties for the selected authentication plugin.",
                    "additionalProperties":{
                        "type":"string"
                    }
                },
                "auth":{
                    "type":"string",
                    "description":"Use an authentication plugin to access the remote node."
                },
                "eval":{
                    "type":"boolean",
                    "default":false,
                    "description":"Evaluate without executing the command."
                },
                "schedule":{
                    "type":"string",
                    "description":"Preferred time to execute the operation, in ISO-8601 format. For example: 2016-12-21T19:13:17+05."
                }
            }
        },
        "ImportImageBody":{
            "type":"object",
            "properties":{
                "imageName":{
                    "type":"string",
                    "description":"Name of the image."
                },
                "client":{
                    "type":"string",
                    "description":"Client cluster name."
                },
                "imageType":{
                    "type":"string",
                    "description":"The software type. (\"ORACLEDBSOFTWARE\" (default) for Oracle database software, \"ORACLEGISOFTWARE\" for Oracle Grid Infrastructure software, ORACLEGGSOFTWARE for Oracle GoldenGate software, \"LINUXOS\" for linux Opearting System ISO, and \"SOFTWARE\" for all other software. For a custom image type, use the image type name.)"
                },
                "schedule":{
                    "type":"string",
                    "description":"Preferred time to execute the operation, in ISO-8601 format. For example: 2016-12-21T19:13:17+05."
                },
                "targetnode":{
                    "type":"string",
                    "description":"Node on which operation needs to be executed."
                },
                "useractiondata":{
                    "type":"string",
                    "description":"Value to be passed to useractiondata parameter of useraction script."
                },
                "pathOwner":{
                    "type":"string",
                    "description":"User with read access to files under the specified path."
                },
                "zip":{
                    "type":"string",
                    "description":"Absolute path of the compressed software home to be imported (a ZIP or TAR file)."
                },
                "version":{
                    "type":"string",
                    "description":"Oracle database version for GIAAS, ODA patchbundle version for ODAPATCHSOFTWARE."
                },
                "state":{
                    "type":"string",
                    "description":"State name.",
                    "enum":[
                        "TESTABLE",
                        "RESTRICTED",
                        "PUBLISHED"
                    ]
                },
                "path":{
                    "type":"string",
                    "description":"Absolute path location of the software home to be imported (For database images, this will be the ORACLE_HOME)."
                },
                "root":{
                    "type":"boolean",
                    "default":false,
                    "description":"Use root credentials to access the remote node."
                },
                "sudoUser":{
                    "type":"string",
                    "description":"perform super user operations as sudo user name."
                },
                "sudoPath":{
                    "type":"string",
                    "description":"location of sudo binary."
                },
                "superUserPasswd":{
                    "type":"string",
                    "description":"The password for the super user account."
                },
                "authArgs":{
                    "type":"object",
                    "description":"Additional properties for the selected authentication plugin.",
                    "additionalProperties":{
                        "type":"string"
                    }
                },
                "auth":{
                    "type":"string",
                    "description":"Use an authentication plugin to access the remote node."
                },
                "host":{
                    "type":"string",
                    "description":"GIAAS host name."
                },
                "cc":{
                    "type":"string",
                    "description":"List of users to whom email notifications will be sent, in addition to owner of working copy."
                },
                "notify":{
                    "type":"boolean",
                    "default":false,
                    "description":"Send email notification."
                },
                "psu":{
                    "type":"string",
                    "description":"Bug number or downloaded zip location or released PSU/BP."
                },
                "patches":{
                    "type":"string",
                    "description":"Comma separated bug numbers or NFS downloaded zip location or combination of both."
                },
                "port":{
                    "type":"string",
                    "description":"Port number in the range of 1024-65536."
                }
            }
        },
        "AddWorkingCopyBody":{
            "type":"object",
            "properties":{
                "client":{
                    "type":"string",
                    "description":"Client cluster name"
                },
                "targetnode":{
                    "type":"string",
                    "description":"Node on which operation needs to be executed"
                },
                "setupSSH":{
                    "type":"boolean",
                    "default":false,
                    "description":"sets up passwordless SSH user equivalence on the remote nodes for the provisioning user."
                },
                "node":{
                    "type":"string",
                    "description":"Comma-separated list of nodes on which database will be created"
                },
                "root":{
                    "type":"boolean",
                    "default":false,
                    "description":"Use root credentials to access the remote node."
                },
                "sudoUser":{
                    "type":"string",
                    "description":"perform super user operations as sudo user name."
                },
                "sudoPath":{
                    "type":"string",
                    "description":"location of sudo binary."
                },
                "superUserPasswd":{
                    "type":"string",
                    "description":"The password for the super user account."
                },
                "authArgs":{
                    "type":"object",
                    "description":"Additional properties for the selected authentication plugin.",
                    "additionalProperties":{
                        "type":"string"
                    }
                },
                "auth":{
                    "type":"string",
                    "description":"Use an authentication plugin to access the remote node."
                },
                "eval":{
                    "type":"boolean",
                    "default":false,
                    "description":"Evaluate without executing the command."
                },
                "schedule":{
                    "type":"string",
                    "description":"Preferred time to execute the operation, in ISO-8601 format. For example: 2016-12-21T19:13:17+05."
                },
                "user":{
                    "type":"string",
                    "description":"Name of the user for whom the software home is being provisioned."
                },
                "clusterNodes":{
                    "type":"string",
                    "description":"Comma-separated list of node information on which Oracle Clusterware will be provisioned."
                },
                "isfixup":{
                    "type":"boolean",
                    "default":false,
                    "description":"Execute fixup script. Valid only for Grid Infrastructure provisioning."
                },
                "asmClientData":{
                    "type":"string",
                    "description":"File that contains the ASM client data."
                },
                "gnsClientData":{
                    "type":"string",
                    "description":"File that contains the GNS client data."
                },
                "clusterManifest":{
                    "type":"string",
                    "description":"Location of Cluster Manifest File."
                },
                "oracleBase":{
                    "type":"string",
                    "description":"ORACLE_BASE path for provisioning Oracle database home or Oracle Grid Infrastructure home."
                },
                "agpath":{
                    "type":"string",
                    "description":"Read/write path for the persistent Oracle home path."
                },
                "aupath":{
                    "type":"string",
                    "description":"Read-only gold image path for the persistent Oracle home path."
                },
                "ignorePrereq":{
                    "type":"boolean",
                    "default":false,
                    "description":"To ignore the CVU pre-requisite checks."
                },
                "path":{
                    "type":"string",
                    "description":"Absolute path location of the software home to be imported (For database images, this will be the ORACLE_HOME)."
                },
                "dbtemplate":{
                    "type":"string",
                    "description":"Absolute file path for the template file or relative path to the image home directory on Rapid Home Provisioning Server."
                },
                "dbname":{
                    "type":"string",
                    "description":"Name of database (DB_UNIQUE_NAME) to be provisioned."
                },
                "cardinality":{
                    "type":"string",
                    "description":"Cardinality for new server pool."
                },
                "storagetype":{
                    "type":"string",
                    "description":"Type of storage for the home.",
                    "enum":[
                        "NFS",
                        "LOCAL",
                        "RHP_MANAGED"
                    ]
                },
                "datafileDestination":{
                    "type":"string",
                    "description":"Data file destination location or ASM disk group name."
                },
                "serverpool":{
                    "type":"string",
                    "description":"Comma-separated list of existing server pool names."
                },
                "numberOfPDBs":{
                    "type":"integer",
                    "format":"int32",
                    "description":"Number of PDBs to be created."
                },
                "newpool":{
                    "type":"string",
                    "description":"Server pool name for pool to be created."
                },
                "pdbName":{
                    "type":"string",
                    "description":"The pdbName prefix if one or more PDBs need to be created."
                },
                "cdb":{
                    "type":"boolean",
                    "default":false,
                    "description":"To create database as container database."
                },
                "dbtype":{
                    "type":"string",
                    "enum":[
                        "RAC",
                        "RACONENODE",
                        "SINGLE"
                    ],
                    "description":"Type of database: Oracle RAC One Node or Oracle RAC or Single Instance."
                }
            }
        },
        "UpgradeDatabaseBody":{
            "type":"object",
            "properties":{
                "sourcewc":{
                    "type":"string",
                    "description":"Name of the source working copy from which the Oracle Grid Infrastructure needs to be upgraded."
                },
                "image":{
                    "type":"string",
                    "description":"Name of the image."
                },
                "client":{
                    "type":"string",
                    "description":"Client cluster name"
                },
                "targetnode":{
                    "type":"string",
                    "description":"Node on which operation needs to be executed"
                },
                "sourcehome":{
                    "type":"string",
                    "description":"Source Oracle home path."
                },
                "ignoreprereq":{
                    "type":"boolean",
                    "default":false,
                    "description":"To ignore the CVU pre-requisite checks."
                },
                "path":{
                    "type":"string",
                    "description":"Absolute path location of the software home to be imported (For database images, this will be the ORACLE_HOME)."
                },
                "root":{
                    "type":"boolean",
                    "default":false,
                    "description":"Use root credentials to access the remote node."
                },
                "sudoUser":{
                    "type":"string",
                    "description":"perform super user operations as sudo user name."
                },
                "sudoPath":{
                    "type":"string",
                    "description":"location of sudo binary."
                },
                "superUserPasswd":{
                    "type":"string",
                    "description":"The password for the super user account."
                },
                "authArgs":{
                    "type":"object",
                    "description":"Additional properties for the selected authentication plugin.",
                    "additionalProperties":{
                        "type":"string"
                    }
                },
                "auth":{
                    "type":"string",
                    "description":"Use an authentication plugin to access the remote node."
                },
                "eval":{
                    "type":"boolean",
                    "default":false,
                    "description":"Evaluate without executing the command."
                },
                "schedule":{
                    "type":"string",
                    "description":"Preferred time to execute the operation, in ISO-8601 format. For example: 2016-12-21T19:13:17+05."
                }
            }
        },
        "AddSeriesBody":{
            "type":"object",
            "properties":{
                "imageName":{
                    "type":"string",
                    "description":"Name of the image."
                }
            }
        },
        "MoveDatabaseBody":{
            "type":"object",
            "properties":{
                "dbname":{
                    "type":"string",
                    "description":"Name of database (DB_UNIQUE_NAME) to be provisioned."
                },
                "agpath":{
                    "type":"string",
                    "description":"Read/write path for the persistent Oracle home path."
                },
                "aupath":{
                    "type":"string",
                    "description":"Read-only gold image path for the persistent Oracle home path."
                },
                "cc":{
                    "type":"string",
                    "description":"List of users to whom email notifications will be sent, in addition to owner of working copy."
                },
                "ignorewcpatches":{
                    "type":"boolean",
                    "default":false,
                    "description":"Ignores if the patched working copy is missing some patches which are present in the source path or working copy."
                },
                "notify":{
                    "type":"boolean",
                    "default":false,
                    "description":"Send email notification."
                },
                "noDataPatch":{
                    "type":"boolean",
                    "default":false,
                    "description":"Indicates that \"datapatch\" should not be executed for databases being moved."
                },
                "useractiondata":{
                    "type":"string",
                    "description":"Value to be passed to useractiondata parameter of useraction script"
                },
                "root":{
                    "type":"boolean",
                    "default":false,
                    "description":"Use root credentials to access the remote node."
                },
                "sudoUser":{
                    "type":"string",
                    "description":"perform super user operations as sudo user name."
                },
                "sudoPath":{
                    "type":"string",
                    "description":"location of sudo binary."
                },
                "superUserPasswd":{
                    "type":"string",
                    "description":"The password for the super user account."
                },
                "authArgs":{
                    "type":"object",
                    "description":"Additional properties for the selected authentication plugin.",
                    "additionalProperties":{
                        "type":"string"
                    }
                },
                "auth":{
                    "type":"string",
                    "description":"Use an authentication plugin to access the remote node."
                },
                "eval":{
                    "type":"boolean",
                    "default":false,
                    "description":"Evaluate without executing the command."
                },
                "schedule":{
                    "type":"string",
                    "description":"Preferred time to execute the operation, in ISO-8601 format. For example: 2016-12-21T19:13:17+05."
                },
                "abort":{
                    "type":"boolean",
                    "default":false,
                    "description":"Abort the ongoing \"move\" operation."
                },
                "drain_timeout":{
                    "type":"integer",
                    "format":"int32",
                    "description":"Service drain timeout specified in seconds."
                },
                "skip":{
                    "type":"boolean",
                    "default":false,
                    "description":"Skip current batch of nodes and restart databases on the next batch of nodes."
                },
                "stopoption":{
                    "type":"string",
                    "description":"Stop option for database: ABORT, IMMEDIATE, NORMAL, TRANSACTIONAL, TRANSACTIONAL_LOCAL.",
                    "enum":[
                        "ABORT",
                        "IMMEDIATE",
                        "NORMAL",
                        "TRANSACTIONAL",
                        "TRANSACTIONAL_LOCAL"
                    ]
                },
                "continueRestart":{
                    "type":"boolean",
                    "default":false,
                    "description":"Continue restarting databases on the next batch of nodes."
                },
                "disconnect":{
                    "type":"boolean",
                    "default":false,
                    "description":"Disconnect all sessions before stopping or relocating services."
                },
                "keepplacement":{
                    "type":"boolean",
                    "default":false,
                    "description":"Ensure that services of administrator-managed Oracle RAC or Oracle RAC One databases are running on the same instances before and after the move operation."
                },
                "revert":{
                    "type":"boolean",
                    "default":false,
                    "description":"Revert to source Oracle home or working copy in case of batch-move or smartmove."
                },
                "noreplay":{
                    "type":"boolean",
                    "default":false,
                    "description":"Disable session replay during disconnection."
                },
                "path":{
                    "type":"string"
                },
                "targetnode":{
                    "type":"string",
                    "description":"Node on which operation needs to be executed"
                },
                "separate":{
                    "type":"boolean",
                    "default":false,
                    "description":"Process batches separately. Move operation pauses for user intervention before continuing with the next batch."
                },
                "saf":{
                    "type":"string",
                    "description":"Service availability factor, the minimum percentage of instances on which a service must remain running during the move."
                },
                "client":{
                    "type":"string",
                    "description":"Client cluster name"
                },
                "oraclebase":{
                    "type":"string",
                    "description":"ORACLE_BASE path for provisioning Oracle database home or Oracle Grid Infrastructure home."
                }
            }
        },
        "MoveGihomeBody":{
            "type":"object",
            "properties":{
                "image":{
                    "type":"string",
                    "description":"Name of the image."
                },
                "targetnode":{
                    "type":"string",
                    "description":"Node on which operation needs to be executed"
                },
                "agpath":{
                    "type":"string",
                    "description":"Read/write path for the persistent Oracle home path."
                },
                "aupath":{
                    "type":"string",
                    "description":"Read-only gold image path for the persistent Oracle home path."
                },
                "ignorewcpatches":{
                    "type":"boolean",
                    "default":false,
                    "description":"Ignores if the patched working copy is missing some patches which are present in the source path or working copy."
                },
                "abort":{
                    "type":"boolean",
                    "default":false,
                    "description":"Abort the ongoing \"move\" operation."
                },
                "saf":{
                    "type":"string",
                    "description":"Service availability factor, the minimum percentage of instances on which a service must remain running during the move."
                },
                "batches":{
                    "type":"string",
                    "description":"List of batches of nodes in the format: \"(Ba),...,(Bz)\"."
                },
                "nonrolling":{
                    "type":"boolean",
                    "default":false,
                    "description":"Move the Oracle home in non-rolling mode."
                },
                "smartmove":{
                    "type":"boolean",
                    "default":false,
                    "description":"Auto-generate the list of batches of nodes and move databases by restarting instances batch after batch."
                },
                "firstnode":{
                    "type":"string",
                    "description":"Deprecated."
                },
                "excludedblist":{
                    "type":"string",
                    "description":"Patch all databases except the specified databases."
                },
                "cleanpids":{
                    "type":"boolean",
                    "default":false,
                    "description":"Cleans up processes during Oracle Grid Infrastructure move operation."
                },
                "continue":{
                    "type":"boolean",
                    "default":false,
                    "description":"Continue restarting CRS stack on the next batch of nodes."
                },
                "useractiondata":{
                    "type":"string",
                    "description":"Value to be passed to useractiondata parameter of useraction script."
                },
                "draintimeout":{
                    "type":"integer",
                    "format":"int32",
                    "description":"Service drain timeout specified in seconds."
                },
                "nodatapatch":{
                    "type":"boolean",
                    "default":false,
                    "description":"Indicates that \"datapatch\" should not be executed for databases being moved."
                },
                "dbhomes":{
                    "type":"string",
                    "description":"Mapping of source and destination working copies in the format: \"<source_wc1>=<dest_wc1>,...,<source_oracle_home_path>=<dest_wcN>\"."
                },
                "auto":{
                    "type":"boolean",
                    "default":false,
                    "description":"Automatically patch databases along with patching Grid Infrastructure."
                },
                "dblist":{
                    "type":"string",
                    "description":"Patch only the specified databases."
                },
                "disconnect":{
                    "type":"boolean",
                    "default":false,
                    "description":"Disconnect all sessions before stopping or relocating services."
                },
                "keepplacement":{
                    "type":"boolean",
                    "default":false,
                    "description":"Ensure that services of administrator-managed Oracle RAC or Oracle RAC One databases are running on the same instances before and after the move operation."
                },
                "revert":{
                    "type":"boolean",
                    "default":false,
                    "description":"Revert to source Oracle home or working copy in case of batch-move or smartmove."
                },
                "path":{
                    "type":"string",
                    "description":"The absolute path for the destination working copy."
                },
                "root":{
                    "type":"boolean",
                    "default":false,
                    "description":"Use root credentials to access the remote node."
                },
                "sudoUser":{
                    "type":"string",
                    "description":"Perform super user operations as sudo user name."
                },
                "sudoPath":{
                    "type":"string",
                    "description":"Location of sudo binary."
                },
                "superUserPasswd":{
                    "type":"string",
                    "description":"The password for the super user account."
                },
                "authArgs":{
                    "type":"object",
                    "description":"Additional properties for the selected authentication plugin.",
                    "additionalProperties":{
                        "type":"string"
                    }
                },
                "auth":{
                    "type":"string",
                    "description":"Use an authentication plugin to access the remote node."
                },
                "eval":{
                    "type":"boolean",
                    "default":false,
                    "description":"Evaluate without executing the command."
                },
                "schedule":{
                    "type":"string",
                    "description":"Preferred time to execute the operation, in ISO-8601 format. For example: 2016-12-21T19:13:17+05."
                }
            }
        },
        "InsertImageSeriesBody":{
            "type":"object",
            "properties":{
                "before":{
                    "type":"string",
                    "description":"Name of the image before which new image will inserted."
                }
            }
        },
        "DeleteSeriesBody":{
            "type":"object",
            "properties":{
                "force":{
                    "type":"boolean",
                    "default":false,
                    "description":"To remove forcibily."
                }
            }
        },
        "SubscribeSeriesBody":{
            "type":"object",
            "properties":{
                "client":{
                    "type":"string",
                    "description":"Client cluster name"
                }
            }
        },
        "errorResource":{
            "type":"object",
            "properties":{
                "status":{
                    "type":"integer",
                    "description":"HTTP status code."
                },
                "type":{
                    "type":"string",
                    "description":"Link to HTTP error code page."
                },
                "title":{
                    "type":"string",
                    "description":"Summary error message."
                },
                "instance":{
                    "type":"string",
                    "description":"URI to the link that provides more detail about the error."
                },
                "errorDetails":{
                    "type":"array",
                    "description":"If multiple errors are reported they can be organized in a hierarchical structure in this array.",
                    "items":[
                        {
                            "$ref":"#/definitions/errorResource"
                        }
                    ]
                },
                "errorPath":{
                    "type":"string",
                    "description":"XPath or JSON path to indicate where the error occurs."
                },
                "errorCode":{
                    "type":"string",
                    "description":"Application specific error code, related to the error message shown at tittle."
                }
            }
        },
        "jobResource":{
            "type":"object",
            "properties":{
                "jobId":{
                    "type":"string"
                },
                "status":{
                    "type":"string"
                },
                "operation":{
                    "type":"string"
                },
                "output":{
                    "$ref":"#/definitions/jobOutputResource"
                },
                "links":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/singleResourceLinks"
                    }
                }
            }
        },
        "jobOutputResource":{
            "type":"object",
            "properties":{
                "output":{
                    "type":"string"
                },
                "limit":{
                    "type":"integer"
                },
                "offset":{
                    "type":"integer"
                },
                "hasMore":{
                    "type":"boolean",
                    "default":false
                },
                "links":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/collectionResourceLinks"
                    }
                }
            }
        },
        "workingcopyResource":{
            "type":"object",
            "properties":{
                "accessControl":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "additionalBugFixesNotInImage":{
                    "type":"string"
                },
                "additionalPatchesComparedToImage":{
                    "type":"string"
                },
                "allPatchesAvailableInHome":{
                    "type":"string"
                },
                "clusterClient":{
                    "type":"string"
                },
                "clusterClass":{
                    "type":"string"
                },
                "clusterName":{
                    "type":"string"
                },
                "clusterNodes":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "clusterType":{
                    "type":"string"
                },
                "complete":{
                    "type":"boolean",
                    "default":false
                },
                "configuredDatabases":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "goldImagePath":{
                    "type":"string"
                },
                "groupsConfiguredInWorkingCopy":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "imageName":{
                    "type":"string"
                },
                "imageTypeName":{
                    "type":"string"
                },
                "oracleBase":{
                    "type":"string"
                },
                "owner":{
                    "type":"string"
                },
                "softwareHomePath":{
                    "type":"string"
                },
                "storageType":{
                    "type":"string"
                },
                "workingCopyId":{
                    "type":"string"
                },
                "workPath":{
                    "type":"string"
                },
                "softwareOnly":{
                    "type":"boolean",
                    "default":false
                },
                "clusterMode":{
                    "type":"string"
                },
                "links":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/singleResourceLinks"
                    }
                }
            }
        },
        "imageResource":{
            "type":"object",
            "properties":{
                "imageId":{
                    "type":"string"
                },
                "clientName":{
                    "type":"string"
                },
                "roles":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "patches":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "parentImage":{
                    "type":"string"
                },
                "homePath":{
                    "type":"string"
                },
                "imageState":{
                    "type":"string"
                },
                "imageType":{
                    "type":"string"
                },
                "imageSize":{
                    "type":"integer"
                },
                "version":{
                    "type":"string"
                },
                "owner":{
                    "type":"string"
                },
                "complete":{
                    "type":"boolean"
                },
                "platform":{
                    "type":"string"
                },
                "containsNonRollingPatch":{
                    "type":"boolean"
                },
                "groupsConfigured":{
                    "type":"string"
                },
                "templateWithDataFiles":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "templateWithoutDataFiles":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "links":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/singleResourceLinks"
                    }
                }
            }
        },
        "seriesResource":{
            "type":"object",
            "properties":{
                "seriesId":{
                    "type":"string"
                },
                "imageNames":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "subscribedUsers":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "links":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/singleResourceLinks"
                    }
                }
            }
        },
        "arrayOfItems":{
            "type":"object",
            "properties":{
                "items":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/singleResource"
                    }
                }
            }
        },
        "singleResource":{
            "type":"object",
            "properties":{
                "resourceId":{
                    "type":"string"
                },
                "links":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/singleResourceLinks"
                    }
                }
            }
        },
        "singleResourceLinks":{
            "type":"object",
            "properties":{
                "rel":{
                    "type":"string",
                    "description":"Specify the type of relationship the link has with the described resource.",
                    "enum":[
                        "self",
                        "collection",
                        "up",
                        "describedBy"
                    ]
                },
                "href":{
                    "type":"string",
                    "description":"The referenced hyperlink element provided in an absolute format."
                }
            }
        },
        "collectionResourceLinks":{
            "type":"object",
            "properties":{
                "rel":{
                    "type":"string",
                    "description":"Specify the type of relationship the link has with the described resource.",
                    "enum":[
                        "next",
                        "prev",
                        "first",
                        "last"
                    ]
                },
                "href":{
                    "type":"string",
                    "description":"The referenced hyperlink element provided in an absolute format with the correct URL parameters."
                }
            }
        }
    },
    "x-components":{
        "responses":{
            "Collection":{
                "description":"A collection of items.",
                "content":{
                    "application/json":{
                        "schema":{
                            "$ref":"#/definitions/ItemsCollection"
                        }
                    }
                }
            },
            "Item":{
                "description":"A resource item.",
                "content":{
                    "application/json":{
                        "schema":{
                            "$ref":"#/definitions/ResourceItem"
                        }
                    }
                }
            }
        },
        "parameters":{
            "Limit":{
                "name":"limit",
                "in":"query",
                "description":"The maximum number of records to return.",
                "required":false,
                "format":"int32",
                "type":"integer"
            },
            "Filter":{
                "name":"q",
                "in":"query",
                "description":"Filtering is the process of limiting a collection resource by using a per-request dynamic filter definition across multiple page resources, where each page contains a subset of items found in the complete collection. Filtering enables efficient traversal of large collections.",
                "required":false,
                "type":"string"
            }
        },
        "examples":{
            "FilterCriteria":{
                "summary":"Implicit EQUALS operator for a number. Supports String and Dates too.",
                "value":{
                    "SALARY":1000
                }
            },
            "OrderByProperty":{
                "summary":"Order by with literals.",
                "value":{
                    "$orderby":{
                        "SALARY":"ASC",
                        "ENAME":"DESC"
                    }
                }
            },
            "FilterSinceTimestamp":{
                "summary":"Include records with a date property, in this example originating_timestamp, after a specific date."
            },
            "FilterAndOrder":{
                "summary":"Filter criteria supports a wide range of operators. In this example LIKE operator ($like) is used. See Oracle REST Data Services production documentation 'Filtering in Queries' section for further information on the operators available.",
                "value":{
                    "ENAME":{
                        "$like":"AX%"
                    },
                    "$orderby":{
                        "ENAME":"ASC"
                    }
                }
            }
        }
    },
    "tags":[
        {
            "name":"Data Dictionary",
            "description":"The operations from the Data Dictionary category."
        },
        {
            "name":"Fleet Patching and Provisioning/RHP - Manage Gold Images",
            "description":"You can create gold images and series to manage your deployments."
        },
        {
            "name":"Fleet Patching and Provisioning/RHP - Manage Operation Results",
            "description":"You can verify the status and retrieve the output messages of any operation that creates a job to handle its scheduled execution like imaging, provisioning, upgrade and patching operations of software homes."
        },
        {
            "name":"Fleet Patching and Provisioning/RHP - Patch Software homes",
            "description":"You can move from one provisioned copy of a gold image to a provisioned copy of a gold image that is at a higher patch level."
        },
        {
            "name":"Fleet Patching and Provisioning/RHP - Patch Unmanaged Software Homes",
            "description":"You can move from one software home that is not a copy of a gold image to a provisioned copy of a gold image that is at a higher patch level than the first software home."
        },
        {
            "name":"Fleet Patching and Provisioning/RHP - Provisioning Software homes",
            "description":"You can provision a working copy of a gold image."
        },
        {
            "name":"Fleet Patching and Provisioning/RHP - Upgrade Software homes",
            "description":"You can move from one provisioned copy of a gold image to a provisioned copy of a gold image that is at a higher version."
        },
        {
            "name":"Fleet Patching and Provisioning/RHP - Upgrade Unmanaged Software Homes",
            "description":"You can move from one software home that is not a copy of a gold image to a provisioned copy of a gold image that is at a higher version level than the first software home."
        },
        {
            "name":"General",
            "description":"The operations from the General category."
        },
        {
            "name":"Monitoring",
            "description":"The operations from the Monitoring category."
        },
        {
            "name":"Performance",
            "description":"The operations from the Performance category."
        },
        {
            "name":"Pluggable Database Lifecycle Management",
            "description":"The operations from the Pluggable Database Lifecycle Management category."
        }
    ],
    "consumes":[
        "application/json"
    ],
    "produces":[
        "application/json"
    ],
    "securityDefinitions":{
        "basicAuthentication":{
            "type":"basic"
        }
    },
    "schemes":[
        "http",
        "https"
    ],
    "parameters":{
        "authorizationHeader":{
            "name":"Authorization",
            "in":"header",
            "type":"string",
            "required":true,
            "description":"Base64 encoding of the user name and password of the user making the request. For more information, see <a href='Authentication-RHP.html'>Authentication for Fleet Patching and Provisioning</a>."
        },
        "dbUNamePathParam":{
            "name":"dbUniqueName",
            "in":"path",
            "required":true,
            "type":"string",
            "description":"Name of database (DB_UNIQUE_NAME) to be provisioned"
        },
        "destWcIdPatParam":{
            "name":"destWcId",
            "in":"path",
            "required":true,
            "type":"string",
            "description":"Name of the destination working copy to which the Oracle Software needs to be moved"
        },
        "clientQueryParam":{
            "name":"client",
            "in":"query",
            "required":false,
            "type":"string",
            "description":"Client cluster name."
        },
        "imageTypeQueryParam":{
            "name":"imageType",
            "in":"query",
            "required":false,
            "type":"string",
            "description":"The software type. (\"ORACLEDBSOFTWARE\" (default) for Oracle database software, \"ORACLEGISOFTWARE\" for Oracle Grid Infrastructure software, ORACLEGGSOFTWARE for Oracle GoldenGate software, \"LINUXOS\" for linux Opearting System ISO, and \"SOFTWARE\" for all other software. For a custom image type, use the image type name.)"
        },
        "imageTypePathParam":{
            "name":"imageType",
            "in":"path",
            "required":true,
            "type":"string",
            "description":"The software type. (\"ORACLEDBSOFTWARE\" (default) for Oracle database software, \"ORACLEGISOFTWARE\" for Oracle Grid Infrastructure software, ORACLEGGSOFTWARE for Oracle GoldenGate software, \"LINUXOS\" for linux Opearting System ISO, and \"SOFTWARE\" for all other software. For a custom image type, use the image type name.)"
        },
        "serverNameQueryParam":{
            "name":"server",
            "in":"query",
            "required":false,
            "type":"string",
            "description":"Server cluster name."
        },
        "imageNamePathParam":{
            "name":"imageId",
            "in":"path",
            "required":true,
            "type":"string",
            "description":"Name of the image."
        },
        "imageNameQueryParam":{
            "name":"image",
            "in":"query",
            "required":false,
            "type":"string",
            "description":"Name of the image."
        },
        "jobIdPathParam":{
            "name":"jobId",
            "in":"path",
            "required":true,
            "type":"string",
            "description":"Unique integer job ID value for the scheduled job."
        },
        "seriesIdPathParam":{
            "name":"seriesId",
            "in":"path",
            "required":true,
            "type":"string",
            "description":"Name of the series."
        },
        "osUserNamePathParam":{
            "name":"userId",
            "in":"path",
            "required":true,
            "type":"string",
            "description":"OS user name."
        },
        "subscribeUserSeriesBodyParam":{
            "in":"body",
            "name":"body",
            "required":false,
            "schema":{
                "$ref":"#/definitions/SubscribeSeriesBody"
            }
        },
        "workingcopyIdPathParam":{
            "name":"workingCopyId",
            "in":"path",
            "required":true,
            "type":"string",
            "description":"Name of the working copy."
        }
    },
    "responses":{
        "jobAccepted202Response":{
            "description":"Accepted. A JSON object containing job resource details of the accepted operation to obtain status and output of the progress.",
            "schema":{
                "$ref":"#/definitions/jobResource"
            },
            "headers":{
                "Location":{
                    "type":"string",
                    "description":"URL to the job that will execute the operation"
                }
            }
        },
        "okSingleJobResponse":{
            "description":"OK. A JSON object containing a job resource representation with multiple properties and the links array with at least the \"self\" link.",
            "schema":{
                "$ref":"#/definitions/jobResource"
            }
        },
        "okSingleJobOutputResponse":{
            "description":"OK. A JSON object containing a job output resource representation with multiple properties and the links array with at least the \"self\" link.",
            "schema":{
                "$ref":"#/definitions/jobOutputResource"
            }
        },
        "errorResponse":{
            "description":"Unexpected error. A JSON object containing error details of the issue while executing the operation.",
            "schema":{
                "$ref":"#/definitions/errorResource"
            }
        },
        "badRequestResponse":{
            "description":"Bad Request. A JSON object containing error details of the issue found while parsing a parameter value or name.",
            "schema":{
                "$ref":"#/definitions/errorResource"
            }
        },
        "okArrayOfItemsResponse":{
            "description":"OK. A JSON object containing an \"items\" property populated with 0 or more elements with at least an Id property and the links array with at least the \"self\" link.",
            "schema":{
                "$ref":"#/definitions/arrayOfItems"
            }
        },
        "okSingleImageResponse":{
            "description":"OK. A JSON object containing an image resource representation with multiple properties and the links array with at least the \"self\" link.",
            "schema":{
                "$ref":"#/definitions/imageResource"
            }
        },
        "okDeleteImageResponse":{
            "description":"OK. A JSON object containing an image resource representation with multiple properties and the links array with at least the \"self\" link. Only if it was successfully deleted.",
            "schema":{
                "$ref":"#/definitions/imageResource"
            }
        },
        "okSingleSeriesResponse":{
            "description":"OK. A JSON object containing a series resource representation with multiple properties and the links array with at least the \"self\" link.",
            "schema":{
                "$ref":"#/definitions/seriesResource"
            }
        },
        "okDeleteSeriesResponse":{
            "description":"OK. A JSON object containing a series resource representation with multiple properties and the links array with at least the \"self\" link. Only if it was successfully deleted.",
            "schema":{
                "$ref":"#/definitions/seriesResource"
            }
        },
        "okSingleWorkingcopyResponse":{
            "description":"OK. A JSON object containing a working copy resource representation with multiple properties and the links array with at least the \"self\" link.",
            "schema":{
                "$ref":"#/definitions/workingcopyResource"
            }
        }
    }
}